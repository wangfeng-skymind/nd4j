// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/function.proto

package org.tensorflow.framework;

public interface FunctionDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.FunctionDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>.tensorflow.OpDef signature = 1;</code>
   */
  boolean hasSignature();
  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>.tensorflow.OpDef signature = 1;</code>
   */
  OpDef getSignature();
  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>.tensorflow.OpDef signature = 1;</code>
   */
  OpDefOrBuilder getSignatureOrBuilder();

  /**
   * <pre>
   * Attributes specific to this function definition.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   */
  int getAttrCount();
  /**
   * <pre>
   * Attributes specific to this function definition.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   */
  boolean containsAttr(
          String key);
  /**
   * Use {@link #getAttrMap()} instead.
   */
  @Deprecated
  java.util.Map<String, AttrValue>
  getAttr();
  /**
   * <pre>
   * Attributes specific to this function definition.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   */
  java.util.Map<String, AttrValue>
  getAttrMap();
  /**
   * <pre>
   * Attributes specific to this function definition.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   */

  AttrValue getAttrOrDefault(
          String key,
          AttrValue defaultValue);
  /**
   * <pre>
   * Attributes specific to this function definition.
   * </pre>
   *
   * <code>map&lt;string, .tensorflow.AttrValue&gt; attr = 5;</code>
   */

  AttrValue getAttrOrThrow(
          String key);

  /**
   * <pre>
   * By convention, "op" in node_def is resolved by consulting with a
   * user-defined library first. If not resolved, "func" is assumed to
   * be a builtin op.
   * </pre>
   *
   * <code>repeated .tensorflow.NodeDef node_def = 3;</code>
   */
  java.util.List<NodeDef>
      getNodeDefList();
  /**
   * <pre>
   * By convention, "op" in node_def is resolved by consulting with a
   * user-defined library first. If not resolved, "func" is assumed to
   * be a builtin op.
   * </pre>
   *
   * <code>repeated .tensorflow.NodeDef node_def = 3;</code>
   */
  NodeDef getNodeDef(int index);
  /**
   * <pre>
   * By convention, "op" in node_def is resolved by consulting with a
   * user-defined library first. If not resolved, "func" is assumed to
   * be a builtin op.
   * </pre>
   *
   * <code>repeated .tensorflow.NodeDef node_def = 3;</code>
   */
  int getNodeDefCount();
  /**
   * <pre>
   * By convention, "op" in node_def is resolved by consulting with a
   * user-defined library first. If not resolved, "func" is assumed to
   * be a builtin op.
   * </pre>
   *
   * <code>repeated .tensorflow.NodeDef node_def = 3;</code>
   */
  java.util.List<? extends NodeDefOrBuilder>
      getNodeDefOrBuilderList();
  /**
   * <pre>
   * By convention, "op" in node_def is resolved by consulting with a
   * user-defined library first. If not resolved, "func" is assumed to
   * be a builtin op.
   * </pre>
   *
   * <code>repeated .tensorflow.NodeDef node_def = 3;</code>
   */
  NodeDefOrBuilder getNodeDefOrBuilder(
          int index);

  /**
   * <pre>
   * A mapping from the output arg names from `signature` to the
   * outputs from `node_def` that should be returned by the function.
   * </pre>
   *
   * <code>map&lt;string, string&gt; ret = 4;</code>
   */
  int getRetCount();
  /**
   * <pre>
   * A mapping from the output arg names from `signature` to the
   * outputs from `node_def` that should be returned by the function.
   * </pre>
   *
   * <code>map&lt;string, string&gt; ret = 4;</code>
   */
  boolean containsRet(
          String key);
  /**
   * Use {@link #getRetMap()} instead.
   */
  @Deprecated
  java.util.Map<String, String>
  getRet();
  /**
   * <pre>
   * A mapping from the output arg names from `signature` to the
   * outputs from `node_def` that should be returned by the function.
   * </pre>
   *
   * <code>map&lt;string, string&gt; ret = 4;</code>
   */
  java.util.Map<String, String>
  getRetMap();
  /**
   * <pre>
   * A mapping from the output arg names from `signature` to the
   * outputs from `node_def` that should be returned by the function.
   * </pre>
   *
   * <code>map&lt;string, string&gt; ret = 4;</code>
   */

  String getRetOrDefault(
          String key,
          String defaultValue);
  /**
   * <pre>
   * A mapping from the output arg names from `signature` to the
   * outputs from `node_def` that should be returned by the function.
   * </pre>
   *
   * <code>map&lt;string, string&gt; ret = 4;</code>
   */

  String getRetOrThrow(
          String key);
}
