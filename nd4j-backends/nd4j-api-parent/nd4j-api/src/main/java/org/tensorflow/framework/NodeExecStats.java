// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/step_stats.proto

package org.tensorflow.framework;

/**
 * <pre>
 * Time/size stats recorded for a single execution of a graph node.
 * </pre>
 *
 * Protobuf opType {@code tensorflow.NodeExecStats}
 */
public  final class NodeExecStats extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.NodeExecStats)
    NodeExecStatsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NodeExecStats.newBuilder() to construct.
  private NodeExecStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NodeExecStats() {
    nodeName_ = "";
    allStartMicros_ = 0L;
    opStartRelMicros_ = 0L;
    opEndRelMicros_ = 0L;
    allEndRelMicros_ = 0L;
    memory_ = java.util.Collections.emptyList();
    output_ = java.util.Collections.emptyList();
    timelineLabel_ = "";
    scheduledMicros_ = 0L;
    threadId_ = 0;
    referencedTensor_ = java.util.Collections.emptyList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NodeExecStats(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            nodeName_ = s;
            break;
          }
          case 16: {

            allStartMicros_ = input.readInt64();
            break;
          }
          case 24: {

            opStartRelMicros_ = input.readInt64();
            break;
          }
          case 32: {

            opEndRelMicros_ = input.readInt64();
            break;
          }
          case 40: {

            allEndRelMicros_ = input.readInt64();
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              memory_ = new java.util.ArrayList<AllocatorMemoryUsed>();
              mutable_bitField0_ |= 0x00000020;
            }
            memory_.add(
                input.readMessage(AllocatorMemoryUsed.parser(), extensionRegistry));
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              output_ = new java.util.ArrayList<NodeOutput>();
              mutable_bitField0_ |= 0x00000040;
            }
            output_.add(
                input.readMessage(NodeOutput.parser(), extensionRegistry));
            break;
          }
          case 66: {
            String s = input.readStringRequireUtf8();

            timelineLabel_ = s;
            break;
          }
          case 72: {

            scheduledMicros_ = input.readInt64();
            break;
          }
          case 80: {

            threadId_ = input.readUInt32();
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
              referencedTensor_ = new java.util.ArrayList<AllocationDescription>();
              mutable_bitField0_ |= 0x00000400;
            }
            referencedTensor_.add(
                input.readMessage(AllocationDescription.parser(), extensionRegistry));
            break;
          }
          case 98: {
            MemoryStats.Builder subBuilder = null;
            if (memoryStats_ != null) {
              subBuilder = memoryStats_.toBuilder();
            }
            memoryStats_ = input.readMessage(MemoryStats.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(memoryStats_);
              memoryStats_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        memory_ = java.util.Collections.unmodifiableList(memory_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        output_ = java.util.Collections.unmodifiableList(output_);
      }
      if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
        referencedTensor_ = java.util.Collections.unmodifiableList(referencedTensor_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return StepStatsProtos.internal_static_tensorflow_NodeExecStats_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return StepStatsProtos.internal_static_tensorflow_NodeExecStats_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            NodeExecStats.class, Builder.class);
  }

  private int bitField0_;
  public static final int NODE_NAME_FIELD_NUMBER = 1;
  private volatile Object nodeName_;
  /**
   * <pre>
   * TODO(tucker): Use some more compact form of node identity than
   * the full string name.  Either all processes should agree on a
   * global id (cost_id?) for each node, or we should use a hash of
   * the name.
   * </pre>
   *
   * <code>string node_name = 1;</code>
   */
  public String getNodeName() {
    Object ref = nodeName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      nodeName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * TODO(tucker): Use some more compact form of node identity than
   * the full string name.  Either all processes should agree on a
   * global id (cost_id?) for each node, or we should use a hash of
   * the name.
   * </pre>
   *
   * <code>string node_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getNodeNameBytes() {
    Object ref = nodeName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      nodeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALL_START_MICROS_FIELD_NUMBER = 2;
  private long allStartMicros_;
  /**
   * <code>int64 all_start_micros = 2;</code>
   */
  public long getAllStartMicros() {
    return allStartMicros_;
  }

  public static final int OP_START_REL_MICROS_FIELD_NUMBER = 3;
  private long opStartRelMicros_;
  /**
   * <code>int64 op_start_rel_micros = 3;</code>
   */
  public long getOpStartRelMicros() {
    return opStartRelMicros_;
  }

  public static final int OP_END_REL_MICROS_FIELD_NUMBER = 4;
  private long opEndRelMicros_;
  /**
   * <code>int64 op_end_rel_micros = 4;</code>
   */
  public long getOpEndRelMicros() {
    return opEndRelMicros_;
  }

  public static final int ALL_END_REL_MICROS_FIELD_NUMBER = 5;
  private long allEndRelMicros_;
  /**
   * <code>int64 all_end_rel_micros = 5;</code>
   */
  public long getAllEndRelMicros() {
    return allEndRelMicros_;
  }

  public static final int MEMORY_FIELD_NUMBER = 6;
  private java.util.List<AllocatorMemoryUsed> memory_;
  /**
   * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
   */
  public java.util.List<AllocatorMemoryUsed> getMemoryList() {
    return memory_;
  }
  /**
   * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
   */
  public java.util.List<? extends AllocatorMemoryUsedOrBuilder>
      getMemoryOrBuilderList() {
    return memory_;
  }
  /**
   * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
   */
  public int getMemoryCount() {
    return memory_.size();
  }
  /**
   * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
   */
  public AllocatorMemoryUsed getMemory(int index) {
    return memory_.get(index);
  }
  /**
   * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
   */
  public AllocatorMemoryUsedOrBuilder getMemoryOrBuilder(
      int index) {
    return memory_.get(index);
  }

  public static final int OUTPUT_FIELD_NUMBER = 7;
  private java.util.List<NodeOutput> output_;
  /**
   * <code>repeated .tensorflow.NodeOutput output = 7;</code>
   */
  public java.util.List<NodeOutput> getOutputList() {
    return output_;
  }
  /**
   * <code>repeated .tensorflow.NodeOutput output = 7;</code>
   */
  public java.util.List<? extends NodeOutputOrBuilder>
      getOutputOrBuilderList() {
    return output_;
  }
  /**
   * <code>repeated .tensorflow.NodeOutput output = 7;</code>
   */
  public int getOutputCount() {
    return output_.size();
  }
  /**
   * <code>repeated .tensorflow.NodeOutput output = 7;</code>
   */
  public NodeOutput getOutput(int index) {
    return output_.get(index);
  }
  /**
   * <code>repeated .tensorflow.NodeOutput output = 7;</code>
   */
  public NodeOutputOrBuilder getOutputOrBuilder(
      int index) {
    return output_.get(index);
  }

  public static final int TIMELINE_LABEL_FIELD_NUMBER = 8;
  private volatile Object timelineLabel_;
  /**
   * <code>string timeline_label = 8;</code>
   */
  public String getTimelineLabel() {
    Object ref = timelineLabel_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      timelineLabel_ = s;
      return s;
    }
  }
  /**
   * <code>string timeline_label = 8;</code>
   */
  public com.google.protobuf.ByteString
      getTimelineLabelBytes() {
    Object ref = timelineLabel_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      timelineLabel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHEDULED_MICROS_FIELD_NUMBER = 9;
  private long scheduledMicros_;
  /**
   * <code>int64 scheduled_micros = 9;</code>
   */
  public long getScheduledMicros() {
    return scheduledMicros_;
  }

  public static final int THREAD_ID_FIELD_NUMBER = 10;
  private int threadId_;
  /**
   * <code>uint32 thread_id = 10;</code>
   */
  public int getThreadId() {
    return threadId_;
  }

  public static final int REFERENCED_TENSOR_FIELD_NUMBER = 11;
  private java.util.List<AllocationDescription> referencedTensor_;
  /**
   * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
   */
  public java.util.List<AllocationDescription> getReferencedTensorList() {
    return referencedTensor_;
  }
  /**
   * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
   */
  public java.util.List<? extends AllocationDescriptionOrBuilder>
      getReferencedTensorOrBuilderList() {
    return referencedTensor_;
  }
  /**
   * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
   */
  public int getReferencedTensorCount() {
    return referencedTensor_.size();
  }
  /**
   * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
   */
  public AllocationDescription getReferencedTensor(int index) {
    return referencedTensor_.get(index);
  }
  /**
   * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
   */
  public AllocationDescriptionOrBuilder getReferencedTensorOrBuilder(
      int index) {
    return referencedTensor_.get(index);
  }

  public static final int MEMORY_STATS_FIELD_NUMBER = 12;
  private MemoryStats memoryStats_;
  /**
   * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
   */
  public boolean hasMemoryStats() {
    return memoryStats_ != null;
  }
  /**
   * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
   */
  public MemoryStats getMemoryStats() {
    return memoryStats_ == null ? MemoryStats.getDefaultInstance() : memoryStats_;
  }
  /**
   * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
   */
  public MemoryStatsOrBuilder getMemoryStatsOrBuilder() {
    return getMemoryStats();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNodeNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeName_);
    }
    if (allStartMicros_ != 0L) {
      output.writeInt64(2, allStartMicros_);
    }
    if (opStartRelMicros_ != 0L) {
      output.writeInt64(3, opStartRelMicros_);
    }
    if (opEndRelMicros_ != 0L) {
      output.writeInt64(4, opEndRelMicros_);
    }
    if (allEndRelMicros_ != 0L) {
      output.writeInt64(5, allEndRelMicros_);
    }
    for (int i = 0; i < memory_.size(); i++) {
      output.writeMessage(6, memory_.get(i));
    }
    for (int i = 0; i < output_.size(); i++) {
      output.writeMessage(7, output_.get(i));
    }
    if (!getTimelineLabelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, timelineLabel_);
    }
    if (scheduledMicros_ != 0L) {
      output.writeInt64(9, scheduledMicros_);
    }
    if (threadId_ != 0) {
      output.writeUInt32(10, threadId_);
    }
    for (int i = 0; i < referencedTensor_.size(); i++) {
      output.writeMessage(11, referencedTensor_.get(i));
    }
    if (memoryStats_ != null) {
      output.writeMessage(12, getMemoryStats());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNodeNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeName_);
    }
    if (allStartMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, allStartMicros_);
    }
    if (opStartRelMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, opStartRelMicros_);
    }
    if (opEndRelMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, opEndRelMicros_);
    }
    if (allEndRelMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, allEndRelMicros_);
    }
    for (int i = 0; i < memory_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, memory_.get(i));
    }
    for (int i = 0; i < output_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, output_.get(i));
    }
    if (!getTimelineLabelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, timelineLabel_);
    }
    if (scheduledMicros_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, scheduledMicros_);
    }
    if (threadId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(10, threadId_);
    }
    for (int i = 0; i < referencedTensor_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, referencedTensor_.get(i));
    }
    if (memoryStats_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, getMemoryStats());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof NodeExecStats)) {
      return super.equals(obj);
    }
    NodeExecStats other = (NodeExecStats) obj;

    boolean result = true;
    result = result && getNodeName()
        .equals(other.getNodeName());
    result = result && (getAllStartMicros()
        == other.getAllStartMicros());
    result = result && (getOpStartRelMicros()
        == other.getOpStartRelMicros());
    result = result && (getOpEndRelMicros()
        == other.getOpEndRelMicros());
    result = result && (getAllEndRelMicros()
        == other.getAllEndRelMicros());
    result = result && getMemoryList()
        .equals(other.getMemoryList());
    result = result && getOutputList()
        .equals(other.getOutputList());
    result = result && getTimelineLabel()
        .equals(other.getTimelineLabel());
    result = result && (getScheduledMicros()
        == other.getScheduledMicros());
    result = result && (getThreadId()
        == other.getThreadId());
    result = result && getReferencedTensorList()
        .equals(other.getReferencedTensorList());
    result = result && (hasMemoryStats() == other.hasMemoryStats());
    if (hasMemoryStats()) {
      result = result && getMemoryStats()
          .equals(other.getMemoryStats());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NODE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getNodeName().hashCode();
    hash = (37 * hash) + ALL_START_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAllStartMicros());
    hash = (37 * hash) + OP_START_REL_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOpStartRelMicros());
    hash = (37 * hash) + OP_END_REL_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getOpEndRelMicros());
    hash = (37 * hash) + ALL_END_REL_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAllEndRelMicros());
    if (getMemoryCount() > 0) {
      hash = (37 * hash) + MEMORY_FIELD_NUMBER;
      hash = (53 * hash) + getMemoryList().hashCode();
    }
    if (getOutputCount() > 0) {
      hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
      hash = (53 * hash) + getOutputList().hashCode();
    }
    hash = (37 * hash) + TIMELINE_LABEL_FIELD_NUMBER;
    hash = (53 * hash) + getTimelineLabel().hashCode();
    hash = (37 * hash) + SCHEDULED_MICROS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getScheduledMicros());
    hash = (37 * hash) + THREAD_ID_FIELD_NUMBER;
    hash = (53 * hash) + getThreadId();
    if (getReferencedTensorCount() > 0) {
      hash = (37 * hash) + REFERENCED_TENSOR_FIELD_NUMBER;
      hash = (53 * hash) + getReferencedTensorList().hashCode();
    }
    if (hasMemoryStats()) {
      hash = (37 * hash) + MEMORY_STATS_FIELD_NUMBER;
      hash = (53 * hash) + getMemoryStats().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static NodeExecStats parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NodeExecStats parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NodeExecStats parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NodeExecStats parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NodeExecStats parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NodeExecStats parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NodeExecStats parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static NodeExecStats parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static NodeExecStats parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static NodeExecStats parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static NodeExecStats parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static NodeExecStats parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(NodeExecStats prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Time/size stats recorded for a single execution of a graph node.
   * </pre>
   *
   * Protobuf opType {@code tensorflow.NodeExecStats}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.NodeExecStats)
      NodeExecStatsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return StepStatsProtos.internal_static_tensorflow_NodeExecStats_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return StepStatsProtos.internal_static_tensorflow_NodeExecStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeExecStats.class, Builder.class);
    }

    // Construct using org.tensorflow.framework.NodeExecStats.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMemoryFieldBuilder();
        getOutputFieldBuilder();
        getReferencedTensorFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      nodeName_ = "";

      allStartMicros_ = 0L;

      opStartRelMicros_ = 0L;

      opEndRelMicros_ = 0L;

      allEndRelMicros_ = 0L;

      if (memoryBuilder_ == null) {
        memory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        memoryBuilder_.clear();
      }
      if (outputBuilder_ == null) {
        output_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        outputBuilder_.clear();
      }
      timelineLabel_ = "";

      scheduledMicros_ = 0L;

      threadId_ = 0;

      if (referencedTensorBuilder_ == null) {
        referencedTensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
      } else {
        referencedTensorBuilder_.clear();
      }
      if (memoryStatsBuilder_ == null) {
        memoryStats_ = null;
      } else {
        memoryStats_ = null;
        memoryStatsBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return StepStatsProtos.internal_static_tensorflow_NodeExecStats_descriptor;
    }

    public NodeExecStats getDefaultInstanceForType() {
      return NodeExecStats.getDefaultInstance();
    }

    public NodeExecStats build() {
      NodeExecStats result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public NodeExecStats buildPartial() {
      NodeExecStats result = new NodeExecStats(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.nodeName_ = nodeName_;
      result.allStartMicros_ = allStartMicros_;
      result.opStartRelMicros_ = opStartRelMicros_;
      result.opEndRelMicros_ = opEndRelMicros_;
      result.allEndRelMicros_ = allEndRelMicros_;
      if (memoryBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          memory_ = java.util.Collections.unmodifiableList(memory_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.memory_ = memory_;
      } else {
        result.memory_ = memoryBuilder_.build();
      }
      if (outputBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output_ = java.util.Collections.unmodifiableList(output_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.output_ = output_;
      } else {
        result.output_ = outputBuilder_.build();
      }
      result.timelineLabel_ = timelineLabel_;
      result.scheduledMicros_ = scheduledMicros_;
      result.threadId_ = threadId_;
      if (referencedTensorBuilder_ == null) {
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          referencedTensor_ = java.util.Collections.unmodifiableList(referencedTensor_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.referencedTensor_ = referencedTensor_;
      } else {
        result.referencedTensor_ = referencedTensorBuilder_.build();
      }
      if (memoryStatsBuilder_ == null) {
        result.memoryStats_ = memoryStats_;
      } else {
        result.memoryStats_ = memoryStatsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof NodeExecStats) {
        return mergeFrom((NodeExecStats)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(NodeExecStats other) {
      if (other == NodeExecStats.getDefaultInstance()) return this;
      if (!other.getNodeName().isEmpty()) {
        nodeName_ = other.nodeName_;
        onChanged();
      }
      if (other.getAllStartMicros() != 0L) {
        setAllStartMicros(other.getAllStartMicros());
      }
      if (other.getOpStartRelMicros() != 0L) {
        setOpStartRelMicros(other.getOpStartRelMicros());
      }
      if (other.getOpEndRelMicros() != 0L) {
        setOpEndRelMicros(other.getOpEndRelMicros());
      }
      if (other.getAllEndRelMicros() != 0L) {
        setAllEndRelMicros(other.getAllEndRelMicros());
      }
      if (memoryBuilder_ == null) {
        if (!other.memory_.isEmpty()) {
          if (memory_.isEmpty()) {
            memory_ = other.memory_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureMemoryIsMutable();
            memory_.addAll(other.memory_);
          }
          onChanged();
        }
      } else {
        if (!other.memory_.isEmpty()) {
          if (memoryBuilder_.isEmpty()) {
            memoryBuilder_.dispose();
            memoryBuilder_ = null;
            memory_ = other.memory_;
            bitField0_ = (bitField0_ & ~0x00000020);
            memoryBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMemoryFieldBuilder() : null;
          } else {
            memoryBuilder_.addAllMessages(other.memory_);
          }
        }
      }
      if (outputBuilder_ == null) {
        if (!other.output_.isEmpty()) {
          if (output_.isEmpty()) {
            output_ = other.output_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOutputIsMutable();
            output_.addAll(other.output_);
          }
          onChanged();
        }
      } else {
        if (!other.output_.isEmpty()) {
          if (outputBuilder_.isEmpty()) {
            outputBuilder_.dispose();
            outputBuilder_ = null;
            output_ = other.output_;
            bitField0_ = (bitField0_ & ~0x00000040);
            outputBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOutputFieldBuilder() : null;
          } else {
            outputBuilder_.addAllMessages(other.output_);
          }
        }
      }
      if (!other.getTimelineLabel().isEmpty()) {
        timelineLabel_ = other.timelineLabel_;
        onChanged();
      }
      if (other.getScheduledMicros() != 0L) {
        setScheduledMicros(other.getScheduledMicros());
      }
      if (other.getThreadId() != 0) {
        setThreadId(other.getThreadId());
      }
      if (referencedTensorBuilder_ == null) {
        if (!other.referencedTensor_.isEmpty()) {
          if (referencedTensor_.isEmpty()) {
            referencedTensor_ = other.referencedTensor_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureReferencedTensorIsMutable();
            referencedTensor_.addAll(other.referencedTensor_);
          }
          onChanged();
        }
      } else {
        if (!other.referencedTensor_.isEmpty()) {
          if (referencedTensorBuilder_.isEmpty()) {
            referencedTensorBuilder_.dispose();
            referencedTensorBuilder_ = null;
            referencedTensor_ = other.referencedTensor_;
            bitField0_ = (bitField0_ & ~0x00000400);
            referencedTensorBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReferencedTensorFieldBuilder() : null;
          } else {
            referencedTensorBuilder_.addAllMessages(other.referencedTensor_);
          }
        }
      }
      if (other.hasMemoryStats()) {
        mergeMemoryStats(other.getMemoryStats());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      NodeExecStats parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (NodeExecStats) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private Object nodeName_ = "";
    /**
     * <pre>
     * TODO(tucker): Use some more compact form of node identity than
     * the full string name.  Either all processes should agree on a
     * global id (cost_id?) for each node, or we should use a hash of
     * the name.
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public String getNodeName() {
      Object ref = nodeName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        nodeName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     * TODO(tucker): Use some more compact form of node identity than
     * the full string name.  Either all processes should agree on a
     * global id (cost_id?) for each node, or we should use a hash of
     * the name.
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeNameBytes() {
      Object ref = nodeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        nodeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * TODO(tucker): Use some more compact form of node identity than
     * the full string name.  Either all processes should agree on a
     * global id (cost_id?) for each node, or we should use a hash of
     * the name.
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public Builder setNodeName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nodeName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TODO(tucker): Use some more compact form of node identity than
     * the full string name.  Either all processes should agree on a
     * global id (cost_id?) for each node, or we should use a hash of
     * the name.
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public Builder clearNodeName() {
      
      nodeName_ = getDefaultInstance().getNodeName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TODO(tucker): Use some more compact form of node identity than
     * the full string name.  Either all processes should agree on a
     * global id (cost_id?) for each node, or we should use a hash of
     * the name.
     * </pre>
     *
     * <code>string node_name = 1;</code>
     */
    public Builder setNodeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nodeName_ = value;
      onChanged();
      return this;
    }

    private long allStartMicros_ ;
    /**
     * <code>int64 all_start_micros = 2;</code>
     */
    public long getAllStartMicros() {
      return allStartMicros_;
    }
    /**
     * <code>int64 all_start_micros = 2;</code>
     */
    public Builder setAllStartMicros(long value) {
      
      allStartMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 all_start_micros = 2;</code>
     */
    public Builder clearAllStartMicros() {
      
      allStartMicros_ = 0L;
      onChanged();
      return this;
    }

    private long opStartRelMicros_ ;
    /**
     * <code>int64 op_start_rel_micros = 3;</code>
     */
    public long getOpStartRelMicros() {
      return opStartRelMicros_;
    }
    /**
     * <code>int64 op_start_rel_micros = 3;</code>
     */
    public Builder setOpStartRelMicros(long value) {
      
      opStartRelMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 op_start_rel_micros = 3;</code>
     */
    public Builder clearOpStartRelMicros() {
      
      opStartRelMicros_ = 0L;
      onChanged();
      return this;
    }

    private long opEndRelMicros_ ;
    /**
     * <code>int64 op_end_rel_micros = 4;</code>
     */
    public long getOpEndRelMicros() {
      return opEndRelMicros_;
    }
    /**
     * <code>int64 op_end_rel_micros = 4;</code>
     */
    public Builder setOpEndRelMicros(long value) {
      
      opEndRelMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 op_end_rel_micros = 4;</code>
     */
    public Builder clearOpEndRelMicros() {
      
      opEndRelMicros_ = 0L;
      onChanged();
      return this;
    }

    private long allEndRelMicros_ ;
    /**
     * <code>int64 all_end_rel_micros = 5;</code>
     */
    public long getAllEndRelMicros() {
      return allEndRelMicros_;
    }
    /**
     * <code>int64 all_end_rel_micros = 5;</code>
     */
    public Builder setAllEndRelMicros(long value) {
      
      allEndRelMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 all_end_rel_micros = 5;</code>
     */
    public Builder clearAllEndRelMicros() {
      
      allEndRelMicros_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<AllocatorMemoryUsed> memory_ =
      java.util.Collections.emptyList();
    private void ensureMemoryIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        memory_ = new java.util.ArrayList<AllocatorMemoryUsed>(memory_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        AllocatorMemoryUsed, AllocatorMemoryUsed.Builder, AllocatorMemoryUsedOrBuilder> memoryBuilder_;

    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public java.util.List<AllocatorMemoryUsed> getMemoryList() {
      if (memoryBuilder_ == null) {
        return java.util.Collections.unmodifiableList(memory_);
      } else {
        return memoryBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public int getMemoryCount() {
      if (memoryBuilder_ == null) {
        return memory_.size();
      } else {
        return memoryBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public AllocatorMemoryUsed getMemory(int index) {
      if (memoryBuilder_ == null) {
        return memory_.get(index);
      } else {
        return memoryBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder setMemory(
        int index, AllocatorMemoryUsed value) {
      if (memoryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemoryIsMutable();
        memory_.set(index, value);
        onChanged();
      } else {
        memoryBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder setMemory(
        int index, AllocatorMemoryUsed.Builder builderForValue) {
      if (memoryBuilder_ == null) {
        ensureMemoryIsMutable();
        memory_.set(index, builderForValue.build());
        onChanged();
      } else {
        memoryBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder addMemory(AllocatorMemoryUsed value) {
      if (memoryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemoryIsMutable();
        memory_.add(value);
        onChanged();
      } else {
        memoryBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder addMemory(
        int index, AllocatorMemoryUsed value) {
      if (memoryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMemoryIsMutable();
        memory_.add(index, value);
        onChanged();
      } else {
        memoryBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder addMemory(
        AllocatorMemoryUsed.Builder builderForValue) {
      if (memoryBuilder_ == null) {
        ensureMemoryIsMutable();
        memory_.add(builderForValue.build());
        onChanged();
      } else {
        memoryBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder addMemory(
        int index, AllocatorMemoryUsed.Builder builderForValue) {
      if (memoryBuilder_ == null) {
        ensureMemoryIsMutable();
        memory_.add(index, builderForValue.build());
        onChanged();
      } else {
        memoryBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder addAllMemory(
        Iterable<? extends AllocatorMemoryUsed> values) {
      if (memoryBuilder_ == null) {
        ensureMemoryIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, memory_);
        onChanged();
      } else {
        memoryBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder clearMemory() {
      if (memoryBuilder_ == null) {
        memory_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        memoryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public Builder removeMemory(int index) {
      if (memoryBuilder_ == null) {
        ensureMemoryIsMutable();
        memory_.remove(index);
        onChanged();
      } else {
        memoryBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public AllocatorMemoryUsed.Builder getMemoryBuilder(
        int index) {
      return getMemoryFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public AllocatorMemoryUsedOrBuilder getMemoryOrBuilder(
        int index) {
      if (memoryBuilder_ == null) {
        return memory_.get(index);  } else {
        return memoryBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public java.util.List<? extends AllocatorMemoryUsedOrBuilder>
         getMemoryOrBuilderList() {
      if (memoryBuilder_ != null) {
        return memoryBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(memory_);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public AllocatorMemoryUsed.Builder addMemoryBuilder() {
      return getMemoryFieldBuilder().addBuilder(
          AllocatorMemoryUsed.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public AllocatorMemoryUsed.Builder addMemoryBuilder(
        int index) {
      return getMemoryFieldBuilder().addBuilder(
          index, AllocatorMemoryUsed.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.AllocatorMemoryUsed memory = 6;</code>
     */
    public java.util.List<AllocatorMemoryUsed.Builder>
         getMemoryBuilderList() {
      return getMemoryFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        AllocatorMemoryUsed, AllocatorMemoryUsed.Builder, AllocatorMemoryUsedOrBuilder>
        getMemoryFieldBuilder() {
      if (memoryBuilder_ == null) {
        memoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            AllocatorMemoryUsed, AllocatorMemoryUsed.Builder, AllocatorMemoryUsedOrBuilder>(
                memory_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        memory_ = null;
      }
      return memoryBuilder_;
    }

    private java.util.List<NodeOutput> output_ =
      java.util.Collections.emptyList();
    private void ensureOutputIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        output_ = new java.util.ArrayList<NodeOutput>(output_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeOutput, NodeOutput.Builder, NodeOutputOrBuilder> outputBuilder_;

    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public java.util.List<NodeOutput> getOutputList() {
      if (outputBuilder_ == null) {
        return java.util.Collections.unmodifiableList(output_);
      } else {
        return outputBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public int getOutputCount() {
      if (outputBuilder_ == null) {
        return output_.size();
      } else {
        return outputBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public NodeOutput getOutput(int index) {
      if (outputBuilder_ == null) {
        return output_.get(index);
      } else {
        return outputBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder setOutput(
        int index, NodeOutput value) {
      if (outputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputIsMutable();
        output_.set(index, value);
        onChanged();
      } else {
        outputBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder setOutput(
        int index, NodeOutput.Builder builderForValue) {
      if (outputBuilder_ == null) {
        ensureOutputIsMutable();
        output_.set(index, builderForValue.build());
        onChanged();
      } else {
        outputBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder addOutput(NodeOutput value) {
      if (outputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputIsMutable();
        output_.add(value);
        onChanged();
      } else {
        outputBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder addOutput(
        int index, NodeOutput value) {
      if (outputBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOutputIsMutable();
        output_.add(index, value);
        onChanged();
      } else {
        outputBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder addOutput(
        NodeOutput.Builder builderForValue) {
      if (outputBuilder_ == null) {
        ensureOutputIsMutable();
        output_.add(builderForValue.build());
        onChanged();
      } else {
        outputBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder addOutput(
        int index, NodeOutput.Builder builderForValue) {
      if (outputBuilder_ == null) {
        ensureOutputIsMutable();
        output_.add(index, builderForValue.build());
        onChanged();
      } else {
        outputBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder addAllOutput(
        Iterable<? extends NodeOutput> values) {
      if (outputBuilder_ == null) {
        ensureOutputIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, output_);
        onChanged();
      } else {
        outputBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder clearOutput() {
      if (outputBuilder_ == null) {
        output_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        outputBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public Builder removeOutput(int index) {
      if (outputBuilder_ == null) {
        ensureOutputIsMutable();
        output_.remove(index);
        onChanged();
      } else {
        outputBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public NodeOutput.Builder getOutputBuilder(
        int index) {
      return getOutputFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public NodeOutputOrBuilder getOutputOrBuilder(
        int index) {
      if (outputBuilder_ == null) {
        return output_.get(index);  } else {
        return outputBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public java.util.List<? extends NodeOutputOrBuilder>
         getOutputOrBuilderList() {
      if (outputBuilder_ != null) {
        return outputBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(output_);
      }
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public NodeOutput.Builder addOutputBuilder() {
      return getOutputFieldBuilder().addBuilder(
          NodeOutput.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public NodeOutput.Builder addOutputBuilder(
        int index) {
      return getOutputFieldBuilder().addBuilder(
          index, NodeOutput.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.NodeOutput output = 7;</code>
     */
    public java.util.List<NodeOutput.Builder>
         getOutputBuilderList() {
      return getOutputFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeOutput, NodeOutput.Builder, NodeOutputOrBuilder>
        getOutputFieldBuilder() {
      if (outputBuilder_ == null) {
        outputBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            NodeOutput, NodeOutput.Builder, NodeOutputOrBuilder>(
                output_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        output_ = null;
      }
      return outputBuilder_;
    }

    private Object timelineLabel_ = "";
    /**
     * <code>string timeline_label = 8;</code>
     */
    public String getTimelineLabel() {
      Object ref = timelineLabel_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        timelineLabel_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string timeline_label = 8;</code>
     */
    public com.google.protobuf.ByteString
        getTimelineLabelBytes() {
      Object ref = timelineLabel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        timelineLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string timeline_label = 8;</code>
     */
    public Builder setTimelineLabel(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      timelineLabel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string timeline_label = 8;</code>
     */
    public Builder clearTimelineLabel() {
      
      timelineLabel_ = getDefaultInstance().getTimelineLabel();
      onChanged();
      return this;
    }
    /**
     * <code>string timeline_label = 8;</code>
     */
    public Builder setTimelineLabelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      timelineLabel_ = value;
      onChanged();
      return this;
    }

    private long scheduledMicros_ ;
    /**
     * <code>int64 scheduled_micros = 9;</code>
     */
    public long getScheduledMicros() {
      return scheduledMicros_;
    }
    /**
     * <code>int64 scheduled_micros = 9;</code>
     */
    public Builder setScheduledMicros(long value) {
      
      scheduledMicros_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 scheduled_micros = 9;</code>
     */
    public Builder clearScheduledMicros() {
      
      scheduledMicros_ = 0L;
      onChanged();
      return this;
    }

    private int threadId_ ;
    /**
     * <code>uint32 thread_id = 10;</code>
     */
    public int getThreadId() {
      return threadId_;
    }
    /**
     * <code>uint32 thread_id = 10;</code>
     */
    public Builder setThreadId(int value) {
      
      threadId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 thread_id = 10;</code>
     */
    public Builder clearThreadId() {
      
      threadId_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<AllocationDescription> referencedTensor_ =
      java.util.Collections.emptyList();
    private void ensureReferencedTensorIsMutable() {
      if (!((bitField0_ & 0x00000400) == 0x00000400)) {
        referencedTensor_ = new java.util.ArrayList<AllocationDescription>(referencedTensor_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        AllocationDescription, AllocationDescription.Builder, AllocationDescriptionOrBuilder> referencedTensorBuilder_;

    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public java.util.List<AllocationDescription> getReferencedTensorList() {
      if (referencedTensorBuilder_ == null) {
        return java.util.Collections.unmodifiableList(referencedTensor_);
      } else {
        return referencedTensorBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public int getReferencedTensorCount() {
      if (referencedTensorBuilder_ == null) {
        return referencedTensor_.size();
      } else {
        return referencedTensorBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public AllocationDescription getReferencedTensor(int index) {
      if (referencedTensorBuilder_ == null) {
        return referencedTensor_.get(index);
      } else {
        return referencedTensorBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder setReferencedTensor(
        int index, AllocationDescription value) {
      if (referencedTensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTensorIsMutable();
        referencedTensor_.set(index, value);
        onChanged();
      } else {
        referencedTensorBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder setReferencedTensor(
        int index, AllocationDescription.Builder builderForValue) {
      if (referencedTensorBuilder_ == null) {
        ensureReferencedTensorIsMutable();
        referencedTensor_.set(index, builderForValue.build());
        onChanged();
      } else {
        referencedTensorBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder addReferencedTensor(AllocationDescription value) {
      if (referencedTensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTensorIsMutable();
        referencedTensor_.add(value);
        onChanged();
      } else {
        referencedTensorBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder addReferencedTensor(
        int index, AllocationDescription value) {
      if (referencedTensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferencedTensorIsMutable();
        referencedTensor_.add(index, value);
        onChanged();
      } else {
        referencedTensorBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder addReferencedTensor(
        AllocationDescription.Builder builderForValue) {
      if (referencedTensorBuilder_ == null) {
        ensureReferencedTensorIsMutable();
        referencedTensor_.add(builderForValue.build());
        onChanged();
      } else {
        referencedTensorBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder addReferencedTensor(
        int index, AllocationDescription.Builder builderForValue) {
      if (referencedTensorBuilder_ == null) {
        ensureReferencedTensorIsMutable();
        referencedTensor_.add(index, builderForValue.build());
        onChanged();
      } else {
        referencedTensorBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder addAllReferencedTensor(
        Iterable<? extends AllocationDescription> values) {
      if (referencedTensorBuilder_ == null) {
        ensureReferencedTensorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referencedTensor_);
        onChanged();
      } else {
        referencedTensorBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder clearReferencedTensor() {
      if (referencedTensorBuilder_ == null) {
        referencedTensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        referencedTensorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public Builder removeReferencedTensor(int index) {
      if (referencedTensorBuilder_ == null) {
        ensureReferencedTensorIsMutable();
        referencedTensor_.remove(index);
        onChanged();
      } else {
        referencedTensorBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public AllocationDescription.Builder getReferencedTensorBuilder(
        int index) {
      return getReferencedTensorFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public AllocationDescriptionOrBuilder getReferencedTensorOrBuilder(
        int index) {
      if (referencedTensorBuilder_ == null) {
        return referencedTensor_.get(index);  } else {
        return referencedTensorBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public java.util.List<? extends AllocationDescriptionOrBuilder>
         getReferencedTensorOrBuilderList() {
      if (referencedTensorBuilder_ != null) {
        return referencedTensorBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(referencedTensor_);
      }
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public AllocationDescription.Builder addReferencedTensorBuilder() {
      return getReferencedTensorFieldBuilder().addBuilder(
          AllocationDescription.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public AllocationDescription.Builder addReferencedTensorBuilder(
        int index) {
      return getReferencedTensorFieldBuilder().addBuilder(
          index, AllocationDescription.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.AllocationDescription referenced_tensor = 11;</code>
     */
    public java.util.List<AllocationDescription.Builder>
         getReferencedTensorBuilderList() {
      return getReferencedTensorFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        AllocationDescription, AllocationDescription.Builder, AllocationDescriptionOrBuilder>
        getReferencedTensorFieldBuilder() {
      if (referencedTensorBuilder_ == null) {
        referencedTensorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            AllocationDescription, AllocationDescription.Builder, AllocationDescriptionOrBuilder>(
                referencedTensor_,
                ((bitField0_ & 0x00000400) == 0x00000400),
                getParentForChildren(),
                isClean());
        referencedTensor_ = null;
      }
      return referencedTensorBuilder_;
    }

    private MemoryStats memoryStats_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        MemoryStats, MemoryStats.Builder, MemoryStatsOrBuilder> memoryStatsBuilder_;
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public boolean hasMemoryStats() {
      return memoryStatsBuilder_ != null || memoryStats_ != null;
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public MemoryStats getMemoryStats() {
      if (memoryStatsBuilder_ == null) {
        return memoryStats_ == null ? MemoryStats.getDefaultInstance() : memoryStats_;
      } else {
        return memoryStatsBuilder_.getMessage();
      }
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public Builder setMemoryStats(MemoryStats value) {
      if (memoryStatsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        memoryStats_ = value;
        onChanged();
      } else {
        memoryStatsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public Builder setMemoryStats(
        MemoryStats.Builder builderForValue) {
      if (memoryStatsBuilder_ == null) {
        memoryStats_ = builderForValue.build();
        onChanged();
      } else {
        memoryStatsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public Builder mergeMemoryStats(MemoryStats value) {
      if (memoryStatsBuilder_ == null) {
        if (memoryStats_ != null) {
          memoryStats_ =
            MemoryStats.newBuilder(memoryStats_).mergeFrom(value).buildPartial();
        } else {
          memoryStats_ = value;
        }
        onChanged();
      } else {
        memoryStatsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public Builder clearMemoryStats() {
      if (memoryStatsBuilder_ == null) {
        memoryStats_ = null;
        onChanged();
      } else {
        memoryStats_ = null;
        memoryStatsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public MemoryStats.Builder getMemoryStatsBuilder() {
      
      onChanged();
      return getMemoryStatsFieldBuilder().getBuilder();
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    public MemoryStatsOrBuilder getMemoryStatsOrBuilder() {
      if (memoryStatsBuilder_ != null) {
        return memoryStatsBuilder_.getMessageOrBuilder();
      } else {
        return memoryStats_ == null ?
            MemoryStats.getDefaultInstance() : memoryStats_;
      }
    }
    /**
     * <code>.tensorflow.MemoryStats memory_stats = 12;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        MemoryStats, MemoryStats.Builder, MemoryStatsOrBuilder>
        getMemoryStatsFieldBuilder() {
      if (memoryStatsBuilder_ == null) {
        memoryStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            MemoryStats, MemoryStats.Builder, MemoryStatsOrBuilder>(
                getMemoryStats(),
                getParentForChildren(),
                isClean());
        memoryStats_ = null;
      }
      return memoryStatsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.NodeExecStats)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.NodeExecStats)
  private static final NodeExecStats DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new NodeExecStats();
  }

  public static NodeExecStats getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NodeExecStats>
      PARSER = new com.google.protobuf.AbstractParser<NodeExecStats>() {
    public NodeExecStats parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeExecStats(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NodeExecStats> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<NodeExecStats> getParserForType() {
    return PARSER;
  }

  public NodeExecStats getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

