// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph_transfer_info.proto

package org.tensorflow.framework;

/**
 * <pre>
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 * </pre>
 *
 * Protobuf opType {@code tensorflow.GraphTransferInfo}
 */
public  final class GraphTransferInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo)
    GraphTransferInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GraphTransferInfo.newBuilder() to construct.
  private GraphTransferInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GraphTransferInfo() {
    nodeInfo_ = java.util.Collections.emptyList();
    constNodeInfo_ = java.util.Collections.emptyList();
    nodeInputInfo_ = java.util.Collections.emptyList();
    nodeOutputInfo_ = java.util.Collections.emptyList();
    graphInputNodeInfo_ = java.util.Collections.emptyList();
    graphOutputNodeInfo_ = java.util.Collections.emptyList();
    destination_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GraphTransferInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              nodeInfo_ = new java.util.ArrayList<NodeInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            nodeInfo_.add(
                input.readMessage(NodeInfo.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              constNodeInfo_ = new java.util.ArrayList<ConstNodeInfo>();
              mutable_bitField0_ |= 0x00000002;
            }
            constNodeInfo_.add(
                input.readMessage(ConstNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              nodeInputInfo_ = new java.util.ArrayList<NodeInputInfo>();
              mutable_bitField0_ |= 0x00000004;
            }
            nodeInputInfo_.add(
                input.readMessage(NodeInputInfo.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              nodeOutputInfo_ = new java.util.ArrayList<NodeOutputInfo>();
              mutable_bitField0_ |= 0x00000008;
            }
            nodeOutputInfo_.add(
                input.readMessage(NodeOutputInfo.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              graphInputNodeInfo_ = new java.util.ArrayList<GraphInputNodeInfo>();
              mutable_bitField0_ |= 0x00000010;
            }
            graphInputNodeInfo_.add(
                input.readMessage(GraphInputNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              graphOutputNodeInfo_ = new java.util.ArrayList<GraphOutputNodeInfo>();
              mutable_bitField0_ |= 0x00000020;
            }
            graphOutputNodeInfo_.add(
                input.readMessage(GraphOutputNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            destination_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        nodeInfo_ = java.util.Collections.unmodifiableList(nodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        constNodeInfo_ = java.util.Collections.unmodifiableList(constNodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        nodeInputInfo_ = java.util.Collections.unmodifiableList(nodeInputInfo_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        nodeOutputInfo_ = java.util.Collections.unmodifiableList(nodeOutputInfo_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        graphInputNodeInfo_ = java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        graphOutputNodeInfo_ = java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            GraphTransferInfo.class, Builder.class);
  }

  /**
   * Protobuf enum {@code tensorflow.GraphTransferInfo.Destination}
   */
  public enum Destination
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NOP = 0;</code>
     */
    NOP(0),
    /**
     * <code>HEXAGON = 1;</code>
     */
    HEXAGON(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NOP = 0;</code>
     */
    public static final int NOP_VALUE = 0;
    /**
     * <code>HEXAGON = 1;</code>
     */
    public static final int HEXAGON_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static Destination valueOf(int value) {
      return forNumber(value);
    }

    public static Destination forNumber(int value) {
      switch (value) {
        case 0: return NOP;
        case 1: return HEXAGON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Destination>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Destination> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Destination>() {
            public Destination findValueByNumber(int number) {
              return Destination.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return GraphTransferInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final Destination[] VALUES = values();

    public static Destination valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this opType.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Destination(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.GraphTransferInfo.Destination)
  }

  public interface NodeInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>int32 output_port = 2;</code>
     */
    int getOutputPort();
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInput}
   */
  public  static final class NodeInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInput)
      NodeInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeInput.newBuilder() to construct.
    private NodeInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInput() {
      nodeId_ = 0;
      outputPort_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 16: {

              outputPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeInput.class, Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int OUTPUT_PORT_FIELD_NUMBER = 2;
    private int outputPort_;
    /**
     * <code>int32 output_port = 2;</code>
     */
    public int getOutputPort() {
      return outputPort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      if (outputPort_ != 0) {
        output.writeInt32(2, outputPort_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      if (outputPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, outputPort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NodeInput)) {
        return super.equals(obj);
      }
      NodeInput other = (NodeInput) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (getOutputPort()
          == other.getOutputPort());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + OUTPUT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutputPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NodeInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NodeInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NodeInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInput)
        NodeInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NodeInput.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        outputPort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
      }

      public NodeInput getDefaultInstanceForType() {
        return NodeInput.getDefaultInstance();
      }

      public NodeInput build() {
        NodeInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public NodeInput buildPartial() {
        NodeInput result = new NodeInput(this);
        result.nodeId_ = nodeId_;
        result.outputPort_ = outputPort_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NodeInput) {
          return mergeFrom((NodeInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NodeInput other) {
        if (other == NodeInput.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (other.getOutputPort() != 0) {
          setOutputPort(other.getOutputPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NodeInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NodeInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private int outputPort_ ;
      /**
       * <code>int32 output_port = 2;</code>
       */
      public int getOutputPort() {
        return outputPort_;
      }
      /**
       * <code>int32 output_port = 2;</code>
       */
      public Builder setOutputPort(int value) {
        
        outputPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 output_port = 2;</code>
       */
      public Builder clearOutputPort() {
        
        outputPort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInput)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInput)
    private static final NodeInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NodeInput();
    }

    public static NodeInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInput>
        PARSER = new com.google.protobuf.AbstractParser<NodeInput>() {
      public NodeInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInput> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NodeInput> getParserForType() {
      return PARSER;
    }

    public NodeInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 node_id = 2;</code>
     */
    int getNodeId();

    /**
     * <code>string type_name = 3;</code>
     */
    String getTypeName();
    /**
     * <code>string type_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    /**
     * <code>int32 soc_op_id = 4;</code>
     */
    int getSocOpId();

    /**
     * <code>int32 padding_id = 5;</code>
     */
    int getPaddingId();

    /**
     * <code>int32 input_count = 6;</code>
     */
    int getInputCount();

    /**
     * <code>int32 output_count = 7;</code>
     */
    int getOutputCount();
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInfo}
   */
  public  static final class NodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInfo)
      NodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeInfo.newBuilder() to construct.
    private NodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInfo() {
      name_ = "";
      nodeId_ = 0;
      typeName_ = "";
      socOpId_ = 0;
      paddingId_ = 0;
      inputCount_ = 0;
      outputCount_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              nodeId_ = input.readInt32();
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              typeName_ = s;
              break;
            }
            case 32: {

              socOpId_ = input.readInt32();
              break;
            }
            case 40: {

              paddingId_ = input.readInt32();
              break;
            }
            case 48: {

              inputCount_ = input.readInt32();
              break;
            }
            case 56: {

              outputCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeInfo.class, Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private int nodeId_;
    /**
     * <code>int32 node_id = 2;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int TYPE_NAME_FIELD_NUMBER = 3;
    private volatile Object typeName_;
    /**
     * <code>string type_name = 3;</code>
     */
    public String getTypeName() {
      Object ref = typeName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        typeName_ = s;
        return s;
      }
    }
    /**
     * <code>string type_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      Object ref = typeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOC_OP_ID_FIELD_NUMBER = 4;
    private int socOpId_;
    /**
     * <code>int32 soc_op_id = 4;</code>
     */
    public int getSocOpId() {
      return socOpId_;
    }

    public static final int PADDING_ID_FIELD_NUMBER = 5;
    private int paddingId_;
    /**
     * <code>int32 padding_id = 5;</code>
     */
    public int getPaddingId() {
      return paddingId_;
    }

    public static final int INPUT_COUNT_FIELD_NUMBER = 6;
    private int inputCount_;
    /**
     * <code>int32 input_count = 6;</code>
     */
    public int getInputCount() {
      return inputCount_;
    }

    public static final int OUTPUT_COUNT_FIELD_NUMBER = 7;
    private int outputCount_;
    /**
     * <code>int32 output_count = 7;</code>
     */
    public int getOutputCount() {
      return outputCount_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nodeId_ != 0) {
        output.writeInt32(2, nodeId_);
      }
      if (!getTypeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, typeName_);
      }
      if (socOpId_ != 0) {
        output.writeInt32(4, socOpId_);
      }
      if (paddingId_ != 0) {
        output.writeInt32(5, paddingId_);
      }
      if (inputCount_ != 0) {
        output.writeInt32(6, inputCount_);
      }
      if (outputCount_ != 0) {
        output.writeInt32(7, outputCount_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nodeId_);
      }
      if (!getTypeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, typeName_);
      }
      if (socOpId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, socOpId_);
      }
      if (paddingId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, paddingId_);
      }
      if (inputCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, inputCount_);
      }
      if (outputCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, outputCount_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NodeInfo)) {
        return super.equals(obj);
      }
      NodeInfo other = (NodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getTypeName()
          .equals(other.getTypeName());
      result = result && (getSocOpId()
          == other.getSocOpId());
      result = result && (getPaddingId()
          == other.getPaddingId());
      result = result && (getInputCount()
          == other.getInputCount());
      result = result && (getOutputCount()
          == other.getOutputCount());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + TYPE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTypeName().hashCode();
      hash = (37 * hash) + SOC_OP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSocOpId();
      hash = (37 * hash) + PADDING_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPaddingId();
      hash = (37 * hash) + INPUT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getInputCount();
      hash = (37 * hash) + OUTPUT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getOutputCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInfo)
        NodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NodeInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        nodeId_ = 0;

        typeName_ = "";

        socOpId_ = 0;

        paddingId_ = 0;

        inputCount_ = 0;

        outputCount_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
      }

      public NodeInfo getDefaultInstanceForType() {
        return NodeInfo.getDefaultInstance();
      }

      public NodeInfo build() {
        NodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public NodeInfo buildPartial() {
        NodeInfo result = new NodeInfo(this);
        result.name_ = name_;
        result.nodeId_ = nodeId_;
        result.typeName_ = typeName_;
        result.socOpId_ = socOpId_;
        result.paddingId_ = paddingId_;
        result.inputCount_ = inputCount_;
        result.outputCount_ = outputCount_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NodeInfo) {
          return mergeFrom((NodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NodeInfo other) {
        if (other == NodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.getTypeName().isEmpty()) {
          typeName_ = other.typeName_;
          onChanged();
        }
        if (other.getSocOpId() != 0) {
          setSocOpId(other.getSocOpId());
        }
        if (other.getPaddingId() != 0) {
          setPaddingId(other.getPaddingId());
        }
        if (other.getInputCount() != 0) {
          setInputCount(other.getInputCount());
        }
        if (other.getOutputCount() != 0) {
          setOutputCount(other.getOutputCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 2;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private Object typeName_ = "";
      /**
       * <code>string type_name = 3;</code>
       */
      public String getTypeName() {
        Object ref = typeName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        Object ref = typeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder setTypeName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder clearTypeName() {
        
        typeName_ = getDefaultInstance().getTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        typeName_ = value;
        onChanged();
        return this;
      }

      private int socOpId_ ;
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public int getSocOpId() {
        return socOpId_;
      }
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public Builder setSocOpId(int value) {
        
        socOpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public Builder clearSocOpId() {
        
        socOpId_ = 0;
        onChanged();
        return this;
      }

      private int paddingId_ ;
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public int getPaddingId() {
        return paddingId_;
      }
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public Builder setPaddingId(int value) {
        
        paddingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public Builder clearPaddingId() {
        
        paddingId_ = 0;
        onChanged();
        return this;
      }

      private int inputCount_ ;
      /**
       * <code>int32 input_count = 6;</code>
       */
      public int getInputCount() {
        return inputCount_;
      }
      /**
       * <code>int32 input_count = 6;</code>
       */
      public Builder setInputCount(int value) {
        
        inputCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 input_count = 6;</code>
       */
      public Builder clearInputCount() {
        
        inputCount_ = 0;
        onChanged();
        return this;
      }

      private int outputCount_ ;
      /**
       * <code>int32 output_count = 7;</code>
       */
      public int getOutputCount() {
        return outputCount_;
      }
      /**
       * <code>int32 output_count = 7;</code>
       */
      public Builder setOutputCount(int value) {
        
        outputCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 output_count = 7;</code>
       */
      public Builder clearOutputCount() {
        
        outputCount_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInfo)
    private static final NodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NodeInfo();
    }

    public static NodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInfo>() {
      public NodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NodeInfo> getParserForType() {
      return PARSER;
    }

    public NodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConstNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.ConstNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 node_id = 2;</code>
     */
    int getNodeId();

    /**
     * <code>repeated int64 shape = 3;</code>
     */
    java.util.List<Long> getShapeList();
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    long getShape(int index);

    /**
     * <code>bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    DataType getDtype();
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.ConstNodeInfo}
   */
  public  static final class ConstNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.ConstNodeInfo)
      ConstNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConstNodeInfo.newBuilder() to construct.
    private ConstNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConstNodeInfo() {
      name_ = "";
      nodeId_ = 0;
      shape_ = java.util.Collections.emptyList();
      data_ = com.google.protobuf.ByteString.EMPTY;
      dtype_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConstNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              nodeId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ConstNodeInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private int nodeId_;
    /**
     * <code>int32 node_id = 2;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int SHAPE_FIELD_NUMBER = 3;
    private java.util.List<Long> shape_;
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public java.util.List<Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int DTYPE_FIELD_NUMBER = 5;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    public DataType getDtype() {
      DataType result = DataType.valueOf(dtype_);
      return result == null ? DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nodeId_ != 0) {
        output.writeInt32(2, nodeId_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        output.writeEnum(5, dtype_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nodeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, dtype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ConstNodeInfo)) {
        return super.equals(obj);
      }
      ConstNodeInfo other = (ConstNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && getData()
          .equals(other.getData());
      result = result && dtype_ == other.dtype_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ConstNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConstNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConstNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConstNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConstNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ConstNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ConstNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ConstNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ConstNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ConstNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ConstNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ConstNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ConstNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.ConstNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.ConstNodeInfo)
        ConstNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ConstNodeInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        nodeId_ = 0;

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = com.google.protobuf.ByteString.EMPTY;

        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
      }

      public ConstNodeInfo getDefaultInstanceForType() {
        return ConstNodeInfo.getDefaultInstance();
      }

      public ConstNodeInfo build() {
        ConstNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ConstNodeInfo buildPartial() {
        ConstNodeInfo result = new ConstNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.nodeId_ = nodeId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.shape_ = shape_;
        result.data_ = data_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ConstNodeInfo) {
          return mergeFrom((ConstNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ConstNodeInfo other) {
        if (other == ConstNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ConstNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ConstNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 2;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = new java.util.ArrayList<Long>(shape_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public java.util.List<Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder addAllShape(
          Iterable<? extends Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 4;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public DataType getDtype() {
        DataType result = DataType.valueOf(dtype_);
        return result == null ? DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder setDtype(DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.ConstNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.ConstNodeInfo)
    private static final ConstNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ConstNodeInfo();
    }

    public static ConstNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConstNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<ConstNodeInfo>() {
      public ConstNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ConstNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConstNodeInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ConstNodeInfo> getParserForType() {
      return PARSER;
    }

    public ConstNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInputInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInputInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    java.util.List<NodeInput>
        getNodeInputList();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    NodeInput getNodeInput(int index);
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    int getNodeInputCount();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    java.util.List<? extends NodeInputOrBuilder>
        getNodeInputOrBuilderList();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    NodeInputOrBuilder getNodeInputOrBuilder(
            int index);
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInputInfo}
   */
  public  static final class NodeInputInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInputInfo)
      NodeInputInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeInputInfo.newBuilder() to construct.
    private NodeInputInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInputInfo() {
      nodeId_ = 0;
      nodeInput_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeInputInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                nodeInput_ = new java.util.ArrayList<NodeInput>();
                mutable_bitField0_ |= 0x00000002;
              }
              nodeInput_.add(
                  input.readMessage(NodeInput.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          nodeInput_ = java.util.Collections.unmodifiableList(nodeInput_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeInputInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int NODE_INPUT_FIELD_NUMBER = 2;
    private java.util.List<NodeInput> nodeInput_;
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public java.util.List<NodeInput> getNodeInputList() {
      return nodeInput_;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public java.util.List<? extends NodeInputOrBuilder>
        getNodeInputOrBuilderList() {
      return nodeInput_;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public int getNodeInputCount() {
      return nodeInput_.size();
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public NodeInput getNodeInput(int index) {
      return nodeInput_.get(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public NodeInputOrBuilder getNodeInputOrBuilder(
        int index) {
      return nodeInput_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      for (int i = 0; i < nodeInput_.size(); i++) {
        output.writeMessage(2, nodeInput_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      for (int i = 0; i < nodeInput_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nodeInput_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NodeInputInfo)) {
        return super.equals(obj);
      }
      NodeInputInfo other = (NodeInputInfo) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getNodeInputList()
          .equals(other.getNodeInputList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getNodeInputCount() > 0) {
        hash = (37 * hash) + NODE_INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getNodeInputList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NodeInputInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInputInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInputInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInputInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInputInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeInputInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeInputInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInputInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInputInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NodeInputInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeInputInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeInputInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NodeInputInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeInputInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInputInfo)
        NodeInputInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NodeInputInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeInputFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        if (nodeInputBuilder_ == null) {
          nodeInput_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          nodeInputBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
      }

      public NodeInputInfo getDefaultInstanceForType() {
        return NodeInputInfo.getDefaultInstance();
      }

      public NodeInputInfo build() {
        NodeInputInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public NodeInputInfo buildPartial() {
        NodeInputInfo result = new NodeInputInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        if (nodeInputBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            nodeInput_ = java.util.Collections.unmodifiableList(nodeInput_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.nodeInput_ = nodeInput_;
        } else {
          result.nodeInput_ = nodeInputBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NodeInputInfo) {
          return mergeFrom((NodeInputInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NodeInputInfo other) {
        if (other == NodeInputInfo.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (nodeInputBuilder_ == null) {
          if (!other.nodeInput_.isEmpty()) {
            if (nodeInput_.isEmpty()) {
              nodeInput_ = other.nodeInput_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNodeInputIsMutable();
              nodeInput_.addAll(other.nodeInput_);
            }
            onChanged();
          }
        } else {
          if (!other.nodeInput_.isEmpty()) {
            if (nodeInputBuilder_.isEmpty()) {
              nodeInputBuilder_.dispose();
              nodeInputBuilder_ = null;
              nodeInput_ = other.nodeInput_;
              bitField0_ = (bitField0_ & ~0x00000002);
              nodeInputBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeInputFieldBuilder() : null;
            } else {
              nodeInputBuilder_.addAllMessages(other.nodeInput_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NodeInputInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NodeInputInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<NodeInput> nodeInput_ =
        java.util.Collections.emptyList();
      private void ensureNodeInputIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          nodeInput_ = new java.util.ArrayList<NodeInput>(nodeInput_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          NodeInput, NodeInput.Builder, NodeInputOrBuilder> nodeInputBuilder_;

      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<NodeInput> getNodeInputList() {
        if (nodeInputBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodeInput_);
        } else {
          return nodeInputBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public int getNodeInputCount() {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.size();
        } else {
          return nodeInputBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public NodeInput getNodeInput(int index) {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.get(index);
        } else {
          return nodeInputBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder setNodeInput(
          int index, NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.set(index, value);
          onChanged();
        } else {
          nodeInputBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder setNodeInput(
          int index, NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.add(value);
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          int index, NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.add(index, value);
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.add(builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          int index, NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addAllNodeInput(
          Iterable<? extends NodeInput> values) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodeInput_);
          onChanged();
        } else {
          nodeInputBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder clearNodeInput() {
        if (nodeInputBuilder_ == null) {
          nodeInput_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          nodeInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder removeNodeInput(int index) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.remove(index);
          onChanged();
        } else {
          nodeInputBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public NodeInput.Builder getNodeInputBuilder(
          int index) {
        return getNodeInputFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public NodeInputOrBuilder getNodeInputOrBuilder(
          int index) {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.get(index);  } else {
          return nodeInputBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<? extends NodeInputOrBuilder>
           getNodeInputOrBuilderList() {
        if (nodeInputBuilder_ != null) {
          return nodeInputBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodeInput_);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public NodeInput.Builder addNodeInputBuilder() {
        return getNodeInputFieldBuilder().addBuilder(
            NodeInput.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public NodeInput.Builder addNodeInputBuilder(
          int index) {
        return getNodeInputFieldBuilder().addBuilder(
            index, NodeInput.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<NodeInput.Builder>
           getNodeInputBuilderList() {
        return getNodeInputFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          NodeInput, NodeInput.Builder, NodeInputOrBuilder>
          getNodeInputFieldBuilder() {
        if (nodeInputBuilder_ == null) {
          nodeInputBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              NodeInput, NodeInput.Builder, NodeInputOrBuilder>(
                  nodeInput_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          nodeInput_ = null;
        }
        return nodeInputBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInputInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInputInfo)
    private static final NodeInputInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NodeInputInfo();
    }

    public static NodeInputInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInputInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInputInfo>() {
      public NodeInputInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInputInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInputInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NodeInputInfo> getParserForType() {
      return PARSER;
    }

    public NodeInputInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOutputInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeOutputInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    java.util.List<Integer> getMaxByteSizeList();
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    int getMaxByteSizeCount();
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    int getMaxByteSize(int index);
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeOutputInfo}
   */
  public  static final class NodeOutputInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeOutputInfo)
      NodeOutputInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeOutputInfo.newBuilder() to construct.
    private NodeOutputInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeOutputInfo() {
      nodeId_ = 0;
      maxByteSize_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeOutputInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                maxByteSize_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              maxByteSize_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                maxByteSize_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxByteSize_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = java.util.Collections.unmodifiableList(maxByteSize_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeOutputInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int MAX_BYTE_SIZE_FIELD_NUMBER = 2;
    private java.util.List<Integer> maxByteSize_;
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public java.util.List<Integer>
        getMaxByteSizeList() {
      return maxByteSize_;
    }
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public int getMaxByteSizeCount() {
      return maxByteSize_.size();
    }
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public int getMaxByteSize(int index) {
      return maxByteSize_.get(index);
    }
    private int maxByteSizeMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      if (getMaxByteSizeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(maxByteSizeMemoizedSerializedSize);
      }
      for (int i = 0; i < maxByteSize_.size(); i++) {
        output.writeInt32NoTag(maxByteSize_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < maxByteSize_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(maxByteSize_.get(i));
        }
        size += dataSize;
        if (!getMaxByteSizeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        maxByteSizeMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NodeOutputInfo)) {
        return super.equals(obj);
      }
      NodeOutputInfo other = (NodeOutputInfo) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getMaxByteSizeList()
          .equals(other.getMaxByteSizeList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getMaxByteSizeCount() > 0) {
        hash = (37 * hash) + MAX_BYTE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxByteSizeList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NodeOutputInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeOutputInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeOutputInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeOutputInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeOutputInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeOutputInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeOutputInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeOutputInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeOutputInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NodeOutputInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeOutputInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeOutputInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NodeOutputInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.NodeOutputInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeOutputInfo)
        NodeOutputInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NodeOutputInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        maxByteSize_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
      }

      public NodeOutputInfo getDefaultInstanceForType() {
        return NodeOutputInfo.getDefaultInstance();
      }

      public NodeOutputInfo build() {
        NodeOutputInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public NodeOutputInfo buildPartial() {
        NodeOutputInfo result = new NodeOutputInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = java.util.Collections.unmodifiableList(maxByteSize_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.maxByteSize_ = maxByteSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NodeOutputInfo) {
          return mergeFrom((NodeOutputInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NodeOutputInfo other) {
        if (other == NodeOutputInfo.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.maxByteSize_.isEmpty()) {
          if (maxByteSize_.isEmpty()) {
            maxByteSize_ = other.maxByteSize_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMaxByteSizeIsMutable();
            maxByteSize_.addAll(other.maxByteSize_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NodeOutputInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NodeOutputInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<Integer> maxByteSize_ = java.util.Collections.emptyList();
      private void ensureMaxByteSizeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = new java.util.ArrayList<Integer>(maxByteSize_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public java.util.List<Integer>
          getMaxByteSizeList() {
        return java.util.Collections.unmodifiableList(maxByteSize_);
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public int getMaxByteSizeCount() {
        return maxByteSize_.size();
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public int getMaxByteSize(int index) {
        return maxByteSize_.get(index);
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder setMaxByteSize(
          int index, int value) {
        ensureMaxByteSizeIsMutable();
        maxByteSize_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder addMaxByteSize(int value) {
        ensureMaxByteSizeIsMutable();
        maxByteSize_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder addAllMaxByteSize(
          Iterable<? extends Integer> values) {
        ensureMaxByteSizeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxByteSize_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder clearMaxByteSize() {
        maxByteSize_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeOutputInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeOutputInfo)
    private static final NodeOutputInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NodeOutputInfo();
    }

    public static NodeOutputInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeOutputInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeOutputInfo>() {
      public NodeOutputInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeOutputInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeOutputInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NodeOutputInfo> getParserForType() {
      return PARSER;
    }

    public NodeOutputInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphInputNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int64 shape = 2;</code>
     */
    java.util.List<Long> getShapeList();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    long getShape(int index);

    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    DataType getDtype();
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.GraphInputNodeInfo}
   */
  public  static final class GraphInputNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
      GraphInputNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GraphInputNodeInfo.newBuilder() to construct.
    private GraphInputNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphInputNodeInfo() {
      name_ = "";
      shape_ = java.util.Collections.emptyList();
      dtype_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphInputNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GraphInputNodeInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private java.util.List<Long> shape_;
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public java.util.List<Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DTYPE_FIELD_NUMBER = 3;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public DataType getDtype() {
      DataType result = DataType.valueOf(dtype_);
      return result == null ? DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        output.writeEnum(3, dtype_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dtype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GraphInputNodeInfo)) {
        return super.equals(obj);
      }
      GraphInputNodeInfo other = (GraphInputNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && dtype_ == other.dtype_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GraphInputNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphInputNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphInputNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphInputNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphInputNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphInputNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphInputNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GraphInputNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GraphInputNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GraphInputNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GraphInputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GraphInputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GraphInputNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.GraphInputNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
        GraphInputNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GraphInputNodeInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
      }

      public GraphInputNodeInfo getDefaultInstanceForType() {
        return GraphInputNodeInfo.getDefaultInstance();
      }

      public GraphInputNodeInfo build() {
        GraphInputNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GraphInputNodeInfo buildPartial() {
        GraphInputNodeInfo result = new GraphInputNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.shape_ = shape_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GraphInputNodeInfo) {
          return mergeFrom((GraphInputNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GraphInputNodeInfo other) {
        if (other == GraphInputNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GraphInputNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GraphInputNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = new java.util.ArrayList<Long>(shape_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public java.util.List<Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addAllShape(
          Iterable<? extends Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public DataType getDtype() {
        DataType result = DataType.valueOf(dtype_);
        return result == null ? DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtype(DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
    private static final GraphInputNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GraphInputNodeInfo();
    }

    public static GraphInputNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphInputNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<GraphInputNodeInfo>() {
      public GraphInputNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphInputNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphInputNodeInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GraphInputNodeInfo> getParserForType() {
      return PARSER;
    }

    public GraphInputNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphOutputNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int64 shape = 2;</code>
     */
    java.util.List<Long> getShapeList();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    long getShape(int index);

    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    DataType getDtype();
  }
  /**
   * Protobuf opType {@code tensorflow.GraphTransferInfo.GraphOutputNodeInfo}
   */
  public  static final class GraphOutputNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
      GraphOutputNodeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GraphOutputNodeInfo.newBuilder() to construct.
    private GraphOutputNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphOutputNodeInfo() {
      name_ = "";
      shape_ = java.util.Collections.emptyList();
      dtype_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphOutputNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GraphOutputNodeInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private java.util.List<Long> shape_;
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public java.util.List<Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DTYPE_FIELD_NUMBER = 3;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public DataType getDtype() {
      DataType result = DataType.valueOf(dtype_);
      return result == null ? DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        output.writeEnum(3, dtype_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (dtype_ != DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dtype_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GraphOutputNodeInfo)) {
        return super.equals(obj);
      }
      GraphOutputNodeInfo other = (GraphOutputNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && dtype_ == other.dtype_;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GraphOutputNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphOutputNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphOutputNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphOutputNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphOutputNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GraphOutputNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GraphOutputNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GraphOutputNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static GraphOutputNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static GraphOutputNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GraphOutputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static GraphOutputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GraphOutputNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf opType {@code tensorflow.GraphTransferInfo.GraphOutputNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
        GraphOutputNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GraphOutputNodeInfo.class, Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
      }

      public GraphOutputNodeInfo getDefaultInstanceForType() {
        return GraphOutputNodeInfo.getDefaultInstance();
      }

      public GraphOutputNodeInfo build() {
        GraphOutputNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GraphOutputNodeInfo buildPartial() {
        GraphOutputNodeInfo result = new GraphOutputNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.shape_ = shape_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GraphOutputNodeInfo) {
          return mergeFrom((GraphOutputNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GraphOutputNodeInfo other) {
        if (other == GraphOutputNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GraphOutputNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GraphOutputNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = new java.util.ArrayList<Long>(shape_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public java.util.List<Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addAllShape(
          Iterable<? extends Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public DataType getDtype() {
        DataType result = DataType.valueOf(dtype_);
        return result == null ? DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtype(DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
    private static final GraphOutputNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GraphOutputNodeInfo();
    }

    public static GraphOutputNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphOutputNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<GraphOutputNodeInfo>() {
      public GraphOutputNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphOutputNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphOutputNodeInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GraphOutputNodeInfo> getParserForType() {
      return PARSER;
    }

    public GraphOutputNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int NODE_INFO_FIELD_NUMBER = 1;
  private java.util.List<NodeInfo> nodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public java.util.List<NodeInfo> getNodeInfoList() {
    return nodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public java.util.List<? extends NodeInfoOrBuilder>
      getNodeInfoOrBuilderList() {
    return nodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public int getNodeInfoCount() {
    return nodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public NodeInfo getNodeInfo(int index) {
    return nodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public NodeInfoOrBuilder getNodeInfoOrBuilder(
      int index) {
    return nodeInfo_.get(index);
  }

  public static final int CONST_NODE_INFO_FIELD_NUMBER = 2;
  private java.util.List<ConstNodeInfo> constNodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public java.util.List<ConstNodeInfo> getConstNodeInfoList() {
    return constNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public java.util.List<? extends ConstNodeInfoOrBuilder>
      getConstNodeInfoOrBuilderList() {
    return constNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public int getConstNodeInfoCount() {
    return constNodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public ConstNodeInfo getConstNodeInfo(int index) {
    return constNodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public ConstNodeInfoOrBuilder getConstNodeInfoOrBuilder(
      int index) {
    return constNodeInfo_.get(index);
  }

  public static final int NODE_INPUT_INFO_FIELD_NUMBER = 3;
  private java.util.List<NodeInputInfo> nodeInputInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public java.util.List<NodeInputInfo> getNodeInputInfoList() {
    return nodeInputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public java.util.List<? extends NodeInputInfoOrBuilder>
      getNodeInputInfoOrBuilderList() {
    return nodeInputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public int getNodeInputInfoCount() {
    return nodeInputInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public NodeInputInfo getNodeInputInfo(int index) {
    return nodeInputInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public NodeInputInfoOrBuilder getNodeInputInfoOrBuilder(
      int index) {
    return nodeInputInfo_.get(index);
  }

  public static final int NODE_OUTPUT_INFO_FIELD_NUMBER = 4;
  private java.util.List<NodeOutputInfo> nodeOutputInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public java.util.List<NodeOutputInfo> getNodeOutputInfoList() {
    return nodeOutputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public java.util.List<? extends NodeOutputInfoOrBuilder>
      getNodeOutputInfoOrBuilderList() {
    return nodeOutputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public int getNodeOutputInfoCount() {
    return nodeOutputInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public NodeOutputInfo getNodeOutputInfo(int index) {
    return nodeOutputInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public NodeOutputInfoOrBuilder getNodeOutputInfoOrBuilder(
      int index) {
    return nodeOutputInfo_.get(index);
  }

  public static final int GRAPH_INPUT_NODE_INFO_FIELD_NUMBER = 5;
  private java.util.List<GraphInputNodeInfo> graphInputNodeInfo_;
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public java.util.List<GraphInputNodeInfo> getGraphInputNodeInfoList() {
    return graphInputNodeInfo_;
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public java.util.List<? extends GraphInputNodeInfoOrBuilder>
      getGraphInputNodeInfoOrBuilderList() {
    return graphInputNodeInfo_;
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public int getGraphInputNodeInfoCount() {
    return graphInputNodeInfo_.size();
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public GraphInputNodeInfo getGraphInputNodeInfo(int index) {
    return graphInputNodeInfo_.get(index);
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public GraphInputNodeInfoOrBuilder getGraphInputNodeInfoOrBuilder(
      int index) {
    return graphInputNodeInfo_.get(index);
  }

  public static final int GRAPH_OUTPUT_NODE_INFO_FIELD_NUMBER = 6;
  private java.util.List<GraphOutputNodeInfo> graphOutputNodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public java.util.List<GraphOutputNodeInfo> getGraphOutputNodeInfoList() {
    return graphOutputNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public java.util.List<? extends GraphOutputNodeInfoOrBuilder>
      getGraphOutputNodeInfoOrBuilderList() {
    return graphOutputNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public int getGraphOutputNodeInfoCount() {
    return graphOutputNodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public GraphOutputNodeInfo getGraphOutputNodeInfo(int index) {
    return graphOutputNodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public GraphOutputNodeInfoOrBuilder getGraphOutputNodeInfoOrBuilder(
      int index) {
    return graphOutputNodeInfo_.get(index);
  }

  public static final int DESTINATION_FIELD_NUMBER = 7;
  private int destination_;
  /**
   * <pre>
   * Destination of graph transfer
   * </pre>
   *
   * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
   */
  public int getDestinationValue() {
    return destination_;
  }
  /**
   * <pre>
   * Destination of graph transfer
   * </pre>
   *
   * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
   */
  public Destination getDestination() {
    Destination result = Destination.valueOf(destination_);
    return result == null ? Destination.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < nodeInfo_.size(); i++) {
      output.writeMessage(1, nodeInfo_.get(i));
    }
    for (int i = 0; i < constNodeInfo_.size(); i++) {
      output.writeMessage(2, constNodeInfo_.get(i));
    }
    for (int i = 0; i < nodeInputInfo_.size(); i++) {
      output.writeMessage(3, nodeInputInfo_.get(i));
    }
    for (int i = 0; i < nodeOutputInfo_.size(); i++) {
      output.writeMessage(4, nodeOutputInfo_.get(i));
    }
    for (int i = 0; i < graphInputNodeInfo_.size(); i++) {
      output.writeMessage(5, graphInputNodeInfo_.get(i));
    }
    for (int i = 0; i < graphOutputNodeInfo_.size(); i++) {
      output.writeMessage(6, graphOutputNodeInfo_.get(i));
    }
    if (destination_ != Destination.NOP.getNumber()) {
      output.writeEnum(7, destination_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < nodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, nodeInfo_.get(i));
    }
    for (int i = 0; i < constNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, constNodeInfo_.get(i));
    }
    for (int i = 0; i < nodeInputInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, nodeInputInfo_.get(i));
    }
    for (int i = 0; i < nodeOutputInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, nodeOutputInfo_.get(i));
    }
    for (int i = 0; i < graphInputNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, graphInputNodeInfo_.get(i));
    }
    for (int i = 0; i < graphOutputNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, graphOutputNodeInfo_.get(i));
    }
    if (destination_ != Destination.NOP.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, destination_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof GraphTransferInfo)) {
      return super.equals(obj);
    }
    GraphTransferInfo other = (GraphTransferInfo) obj;

    boolean result = true;
    result = result && getNodeInfoList()
        .equals(other.getNodeInfoList());
    result = result && getConstNodeInfoList()
        .equals(other.getConstNodeInfoList());
    result = result && getNodeInputInfoList()
        .equals(other.getNodeInputInfoList());
    result = result && getNodeOutputInfoList()
        .equals(other.getNodeOutputInfoList());
    result = result && getGraphInputNodeInfoList()
        .equals(other.getGraphInputNodeInfoList());
    result = result && getGraphOutputNodeInfoList()
        .equals(other.getGraphOutputNodeInfoList());
    result = result && destination_ == other.destination_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodeInfoCount() > 0) {
      hash = (37 * hash) + NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeInfoList().hashCode();
    }
    if (getConstNodeInfoCount() > 0) {
      hash = (37 * hash) + CONST_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getConstNodeInfoList().hashCode();
    }
    if (getNodeInputInfoCount() > 0) {
      hash = (37 * hash) + NODE_INPUT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeInputInfoList().hashCode();
    }
    if (getNodeOutputInfoCount() > 0) {
      hash = (37 * hash) + NODE_OUTPUT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeOutputInfoList().hashCode();
    }
    if (getGraphInputNodeInfoCount() > 0) {
      hash = (37 * hash) + GRAPH_INPUT_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getGraphInputNodeInfoList().hashCode();
    }
    if (getGraphOutputNodeInfoCount() > 0) {
      hash = (37 * hash) + GRAPH_OUTPUT_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getGraphOutputNodeInfoList().hashCode();
    }
    hash = (37 * hash) + DESTINATION_FIELD_NUMBER;
    hash = (53 * hash) + destination_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static GraphTransferInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GraphTransferInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GraphTransferInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GraphTransferInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GraphTransferInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static GraphTransferInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static GraphTransferInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GraphTransferInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static GraphTransferInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static GraphTransferInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static GraphTransferInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static GraphTransferInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(GraphTransferInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Protocol buffer representing a handle to a tensorflow resource. Handles are
   * not valid across executions, but can be serialized back and forth from within
   * a single run.
   * </pre>
   *
   * Protobuf opType {@code tensorflow.GraphTransferInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo)
      GraphTransferInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GraphTransferInfo.class, Builder.class);
    }

    // Construct using org.tensorflow.framework.GraphTransferInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodeInfoFieldBuilder();
        getConstNodeInfoFieldBuilder();
        getNodeInputInfoFieldBuilder();
        getNodeOutputInfoFieldBuilder();
        getGraphInputNodeInfoFieldBuilder();
        getGraphOutputNodeInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (nodeInfoBuilder_ == null) {
        nodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nodeInfoBuilder_.clear();
      }
      if (constNodeInfoBuilder_ == null) {
        constNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        constNodeInfoBuilder_.clear();
      }
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        nodeInputInfoBuilder_.clear();
      }
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        nodeOutputInfoBuilder_.clear();
      }
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        graphInputNodeInfoBuilder_.clear();
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        graphOutputNodeInfoBuilder_.clear();
      }
      destination_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
    }

    public GraphTransferInfo getDefaultInstanceForType() {
      return GraphTransferInfo.getDefaultInstance();
    }

    public GraphTransferInfo build() {
      GraphTransferInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public GraphTransferInfo buildPartial() {
      GraphTransferInfo result = new GraphTransferInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (nodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          nodeInfo_ = java.util.Collections.unmodifiableList(nodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodeInfo_ = nodeInfo_;
      } else {
        result.nodeInfo_ = nodeInfoBuilder_.build();
      }
      if (constNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          constNodeInfo_ = java.util.Collections.unmodifiableList(constNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.constNodeInfo_ = constNodeInfo_;
      } else {
        result.constNodeInfo_ = constNodeInfoBuilder_.build();
      }
      if (nodeInputInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          nodeInputInfo_ = java.util.Collections.unmodifiableList(nodeInputInfo_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.nodeInputInfo_ = nodeInputInfo_;
      } else {
        result.nodeInputInfo_ = nodeInputInfoBuilder_.build();
      }
      if (nodeOutputInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          nodeOutputInfo_ = java.util.Collections.unmodifiableList(nodeOutputInfo_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.nodeOutputInfo_ = nodeOutputInfo_;
      } else {
        result.nodeOutputInfo_ = nodeOutputInfoBuilder_.build();
      }
      if (graphInputNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          graphInputNodeInfo_ = java.util.Collections.unmodifiableList(graphInputNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.graphInputNodeInfo_ = graphInputNodeInfo_;
      } else {
        result.graphInputNodeInfo_ = graphInputNodeInfoBuilder_.build();
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          graphOutputNodeInfo_ = java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.graphOutputNodeInfo_ = graphOutputNodeInfo_;
      } else {
        result.graphOutputNodeInfo_ = graphOutputNodeInfoBuilder_.build();
      }
      result.destination_ = destination_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof GraphTransferInfo) {
        return mergeFrom((GraphTransferInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(GraphTransferInfo other) {
      if (other == GraphTransferInfo.getDefaultInstance()) return this;
      if (nodeInfoBuilder_ == null) {
        if (!other.nodeInfo_.isEmpty()) {
          if (nodeInfo_.isEmpty()) {
            nodeInfo_ = other.nodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodeInfoIsMutable();
            nodeInfo_.addAll(other.nodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeInfo_.isEmpty()) {
          if (nodeInfoBuilder_.isEmpty()) {
            nodeInfoBuilder_.dispose();
            nodeInfoBuilder_ = null;
            nodeInfo_ = other.nodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeInfoFieldBuilder() : null;
          } else {
            nodeInfoBuilder_.addAllMessages(other.nodeInfo_);
          }
        }
      }
      if (constNodeInfoBuilder_ == null) {
        if (!other.constNodeInfo_.isEmpty()) {
          if (constNodeInfo_.isEmpty()) {
            constNodeInfo_ = other.constNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureConstNodeInfoIsMutable();
            constNodeInfo_.addAll(other.constNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.constNodeInfo_.isEmpty()) {
          if (constNodeInfoBuilder_.isEmpty()) {
            constNodeInfoBuilder_.dispose();
            constNodeInfoBuilder_ = null;
            constNodeInfo_ = other.constNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
            constNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConstNodeInfoFieldBuilder() : null;
          } else {
            constNodeInfoBuilder_.addAllMessages(other.constNodeInfo_);
          }
        }
      }
      if (nodeInputInfoBuilder_ == null) {
        if (!other.nodeInputInfo_.isEmpty()) {
          if (nodeInputInfo_.isEmpty()) {
            nodeInputInfo_ = other.nodeInputInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNodeInputInfoIsMutable();
            nodeInputInfo_.addAll(other.nodeInputInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeInputInfo_.isEmpty()) {
          if (nodeInputInfoBuilder_.isEmpty()) {
            nodeInputInfoBuilder_.dispose();
            nodeInputInfoBuilder_ = null;
            nodeInputInfo_ = other.nodeInputInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
            nodeInputInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeInputInfoFieldBuilder() : null;
          } else {
            nodeInputInfoBuilder_.addAllMessages(other.nodeInputInfo_);
          }
        }
      }
      if (nodeOutputInfoBuilder_ == null) {
        if (!other.nodeOutputInfo_.isEmpty()) {
          if (nodeOutputInfo_.isEmpty()) {
            nodeOutputInfo_ = other.nodeOutputInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureNodeOutputInfoIsMutable();
            nodeOutputInfo_.addAll(other.nodeOutputInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeOutputInfo_.isEmpty()) {
          if (nodeOutputInfoBuilder_.isEmpty()) {
            nodeOutputInfoBuilder_.dispose();
            nodeOutputInfoBuilder_ = null;
            nodeOutputInfo_ = other.nodeOutputInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
            nodeOutputInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeOutputInfoFieldBuilder() : null;
          } else {
            nodeOutputInfoBuilder_.addAllMessages(other.nodeOutputInfo_);
          }
        }
      }
      if (graphInputNodeInfoBuilder_ == null) {
        if (!other.graphInputNodeInfo_.isEmpty()) {
          if (graphInputNodeInfo_.isEmpty()) {
            graphInputNodeInfo_ = other.graphInputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGraphInputNodeInfoIsMutable();
            graphInputNodeInfo_.addAll(other.graphInputNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.graphInputNodeInfo_.isEmpty()) {
          if (graphInputNodeInfoBuilder_.isEmpty()) {
            graphInputNodeInfoBuilder_.dispose();
            graphInputNodeInfoBuilder_ = null;
            graphInputNodeInfo_ = other.graphInputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000010);
            graphInputNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGraphInputNodeInfoFieldBuilder() : null;
          } else {
            graphInputNodeInfoBuilder_.addAllMessages(other.graphInputNodeInfo_);
          }
        }
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        if (!other.graphOutputNodeInfo_.isEmpty()) {
          if (graphOutputNodeInfo_.isEmpty()) {
            graphOutputNodeInfo_ = other.graphOutputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureGraphOutputNodeInfoIsMutable();
            graphOutputNodeInfo_.addAll(other.graphOutputNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.graphOutputNodeInfo_.isEmpty()) {
          if (graphOutputNodeInfoBuilder_.isEmpty()) {
            graphOutputNodeInfoBuilder_.dispose();
            graphOutputNodeInfoBuilder_ = null;
            graphOutputNodeInfo_ = other.graphOutputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
            graphOutputNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGraphOutputNodeInfoFieldBuilder() : null;
          } else {
            graphOutputNodeInfoBuilder_.addAllMessages(other.graphOutputNodeInfo_);
          }
        }
      }
      if (other.destination_ != 0) {
        setDestinationValue(other.getDestinationValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      GraphTransferInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (GraphTransferInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<NodeInfo> nodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        nodeInfo_ = new java.util.ArrayList<NodeInfo>(nodeInfo_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeInfo, NodeInfo.Builder, NodeInfoOrBuilder> nodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<NodeInfo> getNodeInfoList() {
      if (nodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeInfo_);
      } else {
        return nodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public int getNodeInfoCount() {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.size();
      } else {
        return nodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public NodeInfo getNodeInfo(int index) {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.get(index);
      } else {
        return nodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder setNodeInfo(
        int index, NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.set(index, value);
        onChanged();
      } else {
        nodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder setNodeInfo(
        int index, NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.add(value);
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        int index, NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.add(index, value);
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        int index, NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addAllNodeInfo(
        Iterable<? extends NodeInfo> values) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeInfo_);
        onChanged();
      } else {
        nodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder clearNodeInfo() {
      if (nodeInfoBuilder_ == null) {
        nodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder removeNodeInfo(int index) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.remove(index);
        onChanged();
      } else {
        nodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public NodeInfo.Builder getNodeInfoBuilder(
        int index) {
      return getNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public NodeInfoOrBuilder getNodeInfoOrBuilder(
        int index) {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.get(index);  } else {
        return nodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<? extends NodeInfoOrBuilder>
         getNodeInfoOrBuilderList() {
      if (nodeInfoBuilder_ != null) {
        return nodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public NodeInfo.Builder addNodeInfoBuilder() {
      return getNodeInfoFieldBuilder().addBuilder(
          NodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public NodeInfo.Builder addNodeInfoBuilder(
        int index) {
      return getNodeInfoFieldBuilder().addBuilder(
          index, NodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<NodeInfo.Builder>
         getNodeInfoBuilderList() {
      return getNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeInfo, NodeInfo.Builder, NodeInfoOrBuilder>
        getNodeInfoFieldBuilder() {
      if (nodeInfoBuilder_ == null) {
        nodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            NodeInfo, NodeInfo.Builder, NodeInfoOrBuilder>(
                nodeInfo_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        nodeInfo_ = null;
      }
      return nodeInfoBuilder_;
    }

    private java.util.List<ConstNodeInfo> constNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureConstNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        constNodeInfo_ = new java.util.ArrayList<ConstNodeInfo>(constNodeInfo_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        ConstNodeInfo, ConstNodeInfo.Builder, ConstNodeInfoOrBuilder> constNodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<ConstNodeInfo> getConstNodeInfoList() {
      if (constNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(constNodeInfo_);
      } else {
        return constNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public int getConstNodeInfoCount() {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.size();
      } else {
        return constNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public ConstNodeInfo getConstNodeInfo(int index) {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.get(index);
      } else {
        return constNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder setConstNodeInfo(
        int index, ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.set(index, value);
        onChanged();
      } else {
        constNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder setConstNodeInfo(
        int index, ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(value);
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        int index, ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(index, value);
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        int index, ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addAllConstNodeInfo(
        Iterable<? extends ConstNodeInfo> values) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, constNodeInfo_);
        onChanged();
      } else {
        constNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder clearConstNodeInfo() {
      if (constNodeInfoBuilder_ == null) {
        constNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        constNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder removeConstNodeInfo(int index) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.remove(index);
        onChanged();
      } else {
        constNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public ConstNodeInfo.Builder getConstNodeInfoBuilder(
        int index) {
      return getConstNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public ConstNodeInfoOrBuilder getConstNodeInfoOrBuilder(
        int index) {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.get(index);  } else {
        return constNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<? extends ConstNodeInfoOrBuilder>
         getConstNodeInfoOrBuilderList() {
      if (constNodeInfoBuilder_ != null) {
        return constNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(constNodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public ConstNodeInfo.Builder addConstNodeInfoBuilder() {
      return getConstNodeInfoFieldBuilder().addBuilder(
          ConstNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public ConstNodeInfo.Builder addConstNodeInfoBuilder(
        int index) {
      return getConstNodeInfoFieldBuilder().addBuilder(
          index, ConstNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<ConstNodeInfo.Builder>
         getConstNodeInfoBuilderList() {
      return getConstNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        ConstNodeInfo, ConstNodeInfo.Builder, ConstNodeInfoOrBuilder>
        getConstNodeInfoFieldBuilder() {
      if (constNodeInfoBuilder_ == null) {
        constNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            ConstNodeInfo, ConstNodeInfo.Builder, ConstNodeInfoOrBuilder>(
                constNodeInfo_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        constNodeInfo_ = null;
      }
      return constNodeInfoBuilder_;
    }

    private java.util.List<NodeInputInfo> nodeInputInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeInputInfoIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        nodeInputInfo_ = new java.util.ArrayList<NodeInputInfo>(nodeInputInfo_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeInputInfo, NodeInputInfo.Builder, NodeInputInfoOrBuilder> nodeInputInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<NodeInputInfo> getNodeInputInfoList() {
      if (nodeInputInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeInputInfo_);
      } else {
        return nodeInputInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public int getNodeInputInfoCount() {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.size();
      } else {
        return nodeInputInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public NodeInputInfo getNodeInputInfo(int index) {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.get(index);
      } else {
        return nodeInputInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder setNodeInputInfo(
        int index, NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.set(index, value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder setNodeInputInfo(
        int index, NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        int index, NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(index, value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        int index, NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addAllNodeInputInfo(
        Iterable<? extends NodeInputInfo> values) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeInputInfo_);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder clearNodeInputInfo() {
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        nodeInputInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder removeNodeInputInfo(int index) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.remove(index);
        onChanged();
      } else {
        nodeInputInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public NodeInputInfo.Builder getNodeInputInfoBuilder(
        int index) {
      return getNodeInputInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public NodeInputInfoOrBuilder getNodeInputInfoOrBuilder(
        int index) {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.get(index);  } else {
        return nodeInputInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<? extends NodeInputInfoOrBuilder>
         getNodeInputInfoOrBuilderList() {
      if (nodeInputInfoBuilder_ != null) {
        return nodeInputInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeInputInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public NodeInputInfo.Builder addNodeInputInfoBuilder() {
      return getNodeInputInfoFieldBuilder().addBuilder(
          NodeInputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public NodeInputInfo.Builder addNodeInputInfoBuilder(
        int index) {
      return getNodeInputInfoFieldBuilder().addBuilder(
          index, NodeInputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<NodeInputInfo.Builder>
         getNodeInputInfoBuilderList() {
      return getNodeInputInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeInputInfo, NodeInputInfo.Builder, NodeInputInfoOrBuilder>
        getNodeInputInfoFieldBuilder() {
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            NodeInputInfo, NodeInputInfo.Builder, NodeInputInfoOrBuilder>(
                nodeInputInfo_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        nodeInputInfo_ = null;
      }
      return nodeInputInfoBuilder_;
    }

    private java.util.List<NodeOutputInfo> nodeOutputInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeOutputInfoIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        nodeOutputInfo_ = new java.util.ArrayList<NodeOutputInfo>(nodeOutputInfo_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeOutputInfo, NodeOutputInfo.Builder, NodeOutputInfoOrBuilder> nodeOutputInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<NodeOutputInfo> getNodeOutputInfoList() {
      if (nodeOutputInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeOutputInfo_);
      } else {
        return nodeOutputInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public int getNodeOutputInfoCount() {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.size();
      } else {
        return nodeOutputInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public NodeOutputInfo getNodeOutputInfo(int index) {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.get(index);
      } else {
        return nodeOutputInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder setNodeOutputInfo(
        int index, NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.set(index, value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder setNodeOutputInfo(
        int index, NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        int index, NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(index, value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        int index, NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addAllNodeOutputInfo(
        Iterable<? extends NodeOutputInfo> values) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeOutputInfo_);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder clearNodeOutputInfo() {
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder removeNodeOutputInfo(int index) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.remove(index);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public NodeOutputInfo.Builder getNodeOutputInfoBuilder(
        int index) {
      return getNodeOutputInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public NodeOutputInfoOrBuilder getNodeOutputInfoOrBuilder(
        int index) {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.get(index);  } else {
        return nodeOutputInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<? extends NodeOutputInfoOrBuilder>
         getNodeOutputInfoOrBuilderList() {
      if (nodeOutputInfoBuilder_ != null) {
        return nodeOutputInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeOutputInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public NodeOutputInfo.Builder addNodeOutputInfoBuilder() {
      return getNodeOutputInfoFieldBuilder().addBuilder(
          NodeOutputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public NodeOutputInfo.Builder addNodeOutputInfoBuilder(
        int index) {
      return getNodeOutputInfoFieldBuilder().addBuilder(
          index, NodeOutputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<NodeOutputInfo.Builder>
         getNodeOutputInfoBuilderList() {
      return getNodeOutputInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        NodeOutputInfo, NodeOutputInfo.Builder, NodeOutputInfoOrBuilder>
        getNodeOutputInfoFieldBuilder() {
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            NodeOutputInfo, NodeOutputInfo.Builder, NodeOutputInfoOrBuilder>(
                nodeOutputInfo_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        nodeOutputInfo_ = null;
      }
      return nodeOutputInfoBuilder_;
    }

    private java.util.List<GraphInputNodeInfo> graphInputNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureGraphInputNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        graphInputNodeInfo_ = new java.util.ArrayList<GraphInputNodeInfo>(graphInputNodeInfo_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        GraphInputNodeInfo, GraphInputNodeInfo.Builder, GraphInputNodeInfoOrBuilder> graphInputNodeInfoBuilder_;

    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<GraphInputNodeInfo> getGraphInputNodeInfoList() {
      if (graphInputNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      } else {
        return graphInputNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public int getGraphInputNodeInfoCount() {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.size();
      } else {
        return graphInputNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public GraphInputNodeInfo getGraphInputNodeInfo(int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.get(index);
      } else {
        return graphInputNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder setGraphInputNodeInfo(
        int index, GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.set(index, value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder setGraphInputNodeInfo(
        int index, GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        int index, GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(index, value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        int index, GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addAllGraphInputNodeInfo(
        Iterable<? extends GraphInputNodeInfo> values) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, graphInputNodeInfo_);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder clearGraphInputNodeInfo() {
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder removeGraphInputNodeInfo(int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.remove(index);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public GraphInputNodeInfo.Builder getGraphInputNodeInfoBuilder(
        int index) {
      return getGraphInputNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public GraphInputNodeInfoOrBuilder getGraphInputNodeInfoOrBuilder(
        int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.get(index);  } else {
        return graphInputNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<? extends GraphInputNodeInfoOrBuilder>
         getGraphInputNodeInfoOrBuilderList() {
      if (graphInputNodeInfoBuilder_ != null) {
        return graphInputNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public GraphInputNodeInfo.Builder addGraphInputNodeInfoBuilder() {
      return getGraphInputNodeInfoFieldBuilder().addBuilder(
          GraphInputNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public GraphInputNodeInfo.Builder addGraphInputNodeInfoBuilder(
        int index) {
      return getGraphInputNodeInfoFieldBuilder().addBuilder(
          index, GraphInputNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<GraphInputNodeInfo.Builder>
         getGraphInputNodeInfoBuilderList() {
      return getGraphInputNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        GraphInputNodeInfo, GraphInputNodeInfo.Builder, GraphInputNodeInfoOrBuilder>
        getGraphInputNodeInfoFieldBuilder() {
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            GraphInputNodeInfo, GraphInputNodeInfo.Builder, GraphInputNodeInfoOrBuilder>(
                graphInputNodeInfo_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        graphInputNodeInfo_ = null;
      }
      return graphInputNodeInfoBuilder_;
    }

    private java.util.List<GraphOutputNodeInfo> graphOutputNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureGraphOutputNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        graphOutputNodeInfo_ = new java.util.ArrayList<GraphOutputNodeInfo>(graphOutputNodeInfo_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        GraphOutputNodeInfo, GraphOutputNodeInfo.Builder, GraphOutputNodeInfoOrBuilder> graphOutputNodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<GraphOutputNodeInfo> getGraphOutputNodeInfoList() {
      if (graphOutputNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      } else {
        return graphOutputNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public int getGraphOutputNodeInfoCount() {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.size();
      } else {
        return graphOutputNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public GraphOutputNodeInfo getGraphOutputNodeInfo(int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.get(index);
      } else {
        return graphOutputNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder setGraphOutputNodeInfo(
        int index, GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.set(index, value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder setGraphOutputNodeInfo(
        int index, GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        int index, GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(index, value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        int index, GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addAllGraphOutputNodeInfo(
        Iterable<? extends GraphOutputNodeInfo> values) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, graphOutputNodeInfo_);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder clearGraphOutputNodeInfo() {
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder removeGraphOutputNodeInfo(int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.remove(index);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public GraphOutputNodeInfo.Builder getGraphOutputNodeInfoBuilder(
        int index) {
      return getGraphOutputNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public GraphOutputNodeInfoOrBuilder getGraphOutputNodeInfoOrBuilder(
        int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.get(index);  } else {
        return graphOutputNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<? extends GraphOutputNodeInfoOrBuilder>
         getGraphOutputNodeInfoOrBuilderList() {
      if (graphOutputNodeInfoBuilder_ != null) {
        return graphOutputNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public GraphOutputNodeInfo.Builder addGraphOutputNodeInfoBuilder() {
      return getGraphOutputNodeInfoFieldBuilder().addBuilder(
          GraphOutputNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public GraphOutputNodeInfo.Builder addGraphOutputNodeInfoBuilder(
        int index) {
      return getGraphOutputNodeInfoFieldBuilder().addBuilder(
          index, GraphOutputNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<GraphOutputNodeInfo.Builder>
         getGraphOutputNodeInfoBuilderList() {
      return getGraphOutputNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        GraphOutputNodeInfo, GraphOutputNodeInfo.Builder, GraphOutputNodeInfoOrBuilder>
        getGraphOutputNodeInfoFieldBuilder() {
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            GraphOutputNodeInfo, GraphOutputNodeInfo.Builder, GraphOutputNodeInfoOrBuilder>(
                graphOutputNodeInfo_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        graphOutputNodeInfo_ = null;
      }
      return graphOutputNodeInfoBuilder_;
    }

    private int destination_ = 0;
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public int getDestinationValue() {
      return destination_;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder setDestinationValue(int value) {
      destination_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Destination getDestination() {
      Destination result = Destination.valueOf(destination_);
      return result == null ? Destination.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder setDestination(Destination value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      destination_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder clearDestination() {
      
      destination_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo)
  private static final GraphTransferInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new GraphTransferInfo();
  }

  public static GraphTransferInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GraphTransferInfo>
      PARSER = new com.google.protobuf.AbstractParser<GraphTransferInfo>() {
    public GraphTransferInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new GraphTransferInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GraphTransferInfo> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<GraphTransferInfo> getParserForType() {
    return PARSER;
  }

  public GraphTransferInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

